<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Fang's Blog</title><link>https://peromage.github.io/blog/</link><description>Recent content in Blogs on Fang's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Nov 2022 10:57:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Use lisp-data Files in Emacs</title><link>https://peromage.github.io/p/use-lisp-data-files-in-emacs/</link><pubDate>Mon, 14 Nov 2022 10:57:00 +0000</pubDate><guid>https://peromage.github.io/p/use-lisp-data-files-in-emacs/</guid><description>&lt;p>I found that there were few posts mentioning about using &lt;code>lisp-data&lt;/code> files. However, it seems to be used widely in various packages.&lt;/p>
&lt;p>&lt;a class="link" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Read-and-Print.html" target="_blank" rel="noopener"
>Emacs manumal&lt;/a> has a very detailed description of how to read and write lisp objects. In this post I&amp;rsquo;ll mainly demonstrate one specific use case.&lt;/p>
&lt;h2 id="read-from-file">Read from file&lt;/h2>
&lt;p>The biggest challenge is to parse file content to Lisp lists. After a quick search with &lt;code>describe-function&lt;/code>, &lt;code>read&lt;/code> function is able to perfectly handle it in this case.&lt;/p>
&lt;p>Suppose we have a &lt;code>lisp-data&lt;/code> file named &lt;code>mydata&lt;/code> with the content below.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;mydata
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;; mydata -*- lisp-data -*-
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">((&amp;#34;~/repo/peromage.github.io/&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> (&amp;#34;~/.emacs.d/&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> (&amp;#34;~/some/random/place&amp;#34;))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When we read it, we should read the whole file as a string first and then pass it to &lt;code>read&lt;/code> function. The easiest way is to use &lt;code>with-temp-buffer&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">data&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">read&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">with-temp-buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">insert-file-contents&lt;/span> &lt;span class="s">&amp;#34;mydata&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">buffer-string&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span> &lt;span class="nv">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">nth&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="nv">data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">((&amp;#34;~/repo/peromage.github.io/&amp;#34;) (&amp;#34;~/.emacs.d/&amp;#34;) (&amp;#34;~/some/random/place&amp;#34;))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(&amp;#34;~/.emacs.d/&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="write-to-file">Write to file&lt;/h2>
&lt;p>Opposite to &lt;code>read&lt;/code>, to write to file in format that &lt;code>read&lt;/code> understands, use &lt;code>print&lt;/code> or &lt;code>prin1&lt;/code>. Unlike &lt;code>princ&lt;/code> which outputs something that human readable, like removing double quotes for string, these two functions will keep the original data format.&lt;/p>
&lt;p>Suppose there is a list that we want to save to a file.&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">data&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;baz&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To write to a file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">with-temp-file&lt;/span> &lt;span class="s">&amp;#34;saved_data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">insert&lt;/span> &lt;span class="s">&amp;#34;;;; saved_data -*- lisp-data -*-\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">print&lt;/span> &lt;span class="nv">data&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">current-buffer&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the out file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">cat saved_data
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">;;; mydata -*- lisp-data -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">((&amp;#34;foo&amp;#34;) (&amp;#34;bar&amp;#34;) (&amp;#34;baz&amp;#34;))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Nice.&lt;/p></description></item><item><title>Arch Linux on Laptop</title><link>https://peromage.github.io/p/arch-linux-on-laptop/</link><pubDate>Tue, 08 Nov 2022 22:45:00 +0000</pubDate><guid>https://peromage.github.io/p/arch-linux-on-laptop/</guid><description>&lt;p>I recently got my new laptop and I found that some additional tweaks need to be made for laptops. Thus, this post is to have a record in case I forget when I have to reinstall the system.&lt;/p>
&lt;h2 id="installing-arch-linux">Installing Arch Linux&lt;/h2>
&lt;p>I have a script to handle this: &lt;a class="link" href="https://github.com/peromage/pew/blob/master/rice/scripts/setup/arch-install.sh" target="_blank" rel="noopener"
>https://github.com/peromage/pew/blob/master/rice/scripts/setup/arch-install.sh&lt;/a>&lt;/p>
&lt;h2 id="laptop-disk-partitioning-and-encryption">Laptop Disk Partitioning and Encryption&lt;/h2>
&lt;p>Unlike desktop, laptops have to be secure so encrytion is a must.&lt;/p>
&lt;p>Details of how-to can be found on Arch wiki. I&amp;rsquo;m not going to go through that here. However, I&amp;rsquo;ll note down some considerations and things that need to pay attention to.&lt;/p>
&lt;h3 id="partitioning">Partitioning&lt;/h3>
&lt;p>&lt;a class="link" href="https://wiki.archlinux.org/title/Btrfs" target="_blank" rel="noopener"
>Arch wiki about BTRFS&lt;/a>&lt;/p>
&lt;p>Using too many partitions is not good for SSD so I only have two partitions on the disk: EFI partition (also as boot) + a big partition formated with &lt;code>BTRFS&lt;/code>. The second partition is encrypted, which will be demonstrated in the next topic.&lt;/p>
&lt;p>With &lt;code>BTRFS&lt;/code>, I can use subvolume to achieve the similar effect like what partition does, but it is more flexible.&lt;/p>
&lt;p>These subvolumes are created under the big &lt;code>BTRFS&lt;/code>&amp;rsquo;s root.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Subvolume&lt;/th>
&lt;th>Mount Point&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>@arch-root&lt;/td>
&lt;td>/&lt;/td>
&lt;td>System root&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@arch-var&lt;/td>
&lt;td>/var&lt;/td>
&lt;td>Avoid getting snapshot&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@home&lt;/td>
&lt;td>/home&lt;/td>
&lt;td>Separated home&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@swap&lt;/td>
&lt;td>/.swap&lt;/td>
&lt;td>Swap files (no compression, no CoW)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@snapshot&lt;/td>
&lt;td>/.snapshot&lt;/td>
&lt;td>Snapshots&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>An example of how &lt;code>fstab&lt;/code> is set up.&lt;/p>
&lt;p>Be aware that swap subvolume should NOT be mounted with compression on.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;file system&amp;gt; &amp;lt;dir&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 / btrfs rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@arch-root 0 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/nvme0n1p1 LABEL=EFI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1569-822D /boot vfat rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 /home btrfs rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@home 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 /var btrfs rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@arch-var 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 /.swap btrfs rw,noatime,ssd,space_cache=v2,subvol=/@swap 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Swap files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">/.swap/swap-32gb.img none swap defaults 0 0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="encryption">Encryption&lt;/h3>
&lt;p>&lt;a class="link" href="https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system" target="_blank" rel="noopener"
>Arch wiki about encryption&lt;/a>&lt;/p>
&lt;p>Use &lt;code>LUKS2&lt;/code>. The latest &lt;code>GRUB2&lt;/code> has integrated the support for this new algorithm. Why not using it?&lt;/p>
&lt;p>As for the scheme, I leave EFI partition unencrypted and encrypt the whole &lt;code>BTRFS&lt;/code> partition. EFI partition also acts as boot partition (ramfs and kernel reside).&lt;/p>
&lt;p>The reason that I don&amp;rsquo;t put boot partition encrypted is that I have to decrypt twice on startup: once by &lt;code>GRUB&lt;/code> and the other one by kernel. Though there is a way to &lt;a class="link" href="https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system#Avoiding_having_to_enter_the_passphrase_twice" target="_blank" rel="noopener"
>setup a key file&lt;/a> to avoid that, I still prefer typing password (Maybe TPM can be used).&lt;/p>
&lt;p>To tell kernel to decrypt the disk on startup, ramfs and kernel parameters have to be updated.&lt;/p>
&lt;p>Kernel parameters. The UUID has to be the UUID of the partition itself (not unencrypted BTRFS partition).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;cryptdevice=UUID=51d2be03-b9a4-4d4d-bc5a-0a9dba854c1f:ffroot root=/dev/mapper/ffroot&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Update ramfs hooks. &lt;code>encrypt&lt;/code> needs to go after &lt;code>udev&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">HOOKS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">(base udev autodetect modconf block filesystems keyboard fsck encrypt)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="hibernation">Hibernation&lt;/h2>
&lt;p>A workaround has to be made on &lt;code>BTRFS&lt;/code> with swap files.&lt;/p>
&lt;p>First swap files should &lt;strong>NOT&lt;/strong> be set with CoW attribute.&lt;/p>
&lt;p>Follow &lt;a class="link" href="https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Hibernation_into_swap_file_on_Btrfs" target="_blank" rel="noopener"
>this wiki&lt;/a> to calculate swap file physical offset on &lt;code>BTRFS&lt;/code> partition.&lt;/p>
&lt;p>Then set kernel parameters. The UUID should be the UUID of decrypted &lt;code>BTRFS&lt;/code> partition. Differentiate from the UUID above.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;resume=UUID=dcc33411-f4ae-46e0-ba7a-f285301b25f6 resume_offset=3420784&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Update ramfs. Add &lt;code>resume&lt;/code> hook.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">HOOKS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">(base udev autodetect modconf block filesystems keyboard fsck encrypt resume)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="tlp">TLP&lt;/h2>
&lt;p>My &lt;code>TLP&lt;/code> preferences.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/tlp.d/my-power-plan.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TLP_DEFAULT_MODE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">AC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TLP_PERSISTENT_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_SCALING_GOVERNOR_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">performance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_SCALING_GOVERNOR_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">powersave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_ENERGY_PERF_POLICY_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">balance_performance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_ENERGY_PERF_POLICY_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">balance_power&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MIN_PERF_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MAX_PERF_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MIN_PERF_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MAX_PERF_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_BOOST_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_BOOST_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_HWP_DYN_BOOST_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_HWP_DYN_BOOST_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">SCHED_POWERSAVE_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">SCHED_POWERSAVE_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="framework-laptop-specific">Framework Laptop Specific&lt;/h2>
&lt;p>Framework laptop needs some additional tweaks.&lt;/p>
&lt;h3 id="ambient-light-sensor">Ambient Light Sensor&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pacman -S iio-sensor-proxy&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="fingerprint">Fingerprint&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pacman -S fprintd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="bluetooth">Bluetooth&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pacman -S bluez bluez-utils&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># systemctl enable --now bluetooth&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="touchpad-two-finger-three-finger-click">Touchpad Two-finger/Three-finger Click&lt;/h3>
&lt;ol>
&lt;li>Get touchpad device id&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># xinput&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Add to .xinitrc&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># xinput set-prop &amp;lt;device&amp;gt; &amp;#39;libinput Click Method Enabled&amp;#39; 0 1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="brightness-keys">Brightness Keys&lt;/h3>
&lt;p>Add to kernel parameters:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;module_blacklist=hid_sensor_hub&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="suspend-power">Suspend Power&lt;/h3>
&lt;p>Add to kernel parameters:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mem_sleep_default=deep nvme.noacpi=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Windows Rescure Quick Reference</title><link>https://peromage.github.io/p/windows-rescure-quick-reference/</link><pubDate>Wed, 19 Oct 2022 00:01:00 +0000</pubDate><guid>https://peromage.github.io/p/windows-rescure-quick-reference/</guid><description>&lt;p>Though I&amp;rsquo;ve written posts about &lt;a class="link" href="https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/" >dual-booting Windows and Linux&lt;/a> and &lt;a class="link" href="https://peromage.github.io/p/minimalists-multi-boot-usb-drive/" >multi-booting a USB drive&lt;/a>, I have to go back and dig useful information out each time when I forget something.&lt;/p>
&lt;p>After breaking my dual-boot setup once again (forgot to backup boot partition), I decided to create this post for a quick reference.&lt;/p>
&lt;p>This reference assumes system is boot from UEFI and Windows is installed on a dedicated partition.&lt;/p>
&lt;h2 id="setup-a-usb-with-system-images">Setup A USB With System Images&lt;/h2>
&lt;p>Forget the previous multi-boot USB post. Use &lt;a class="link" href="https://www.ventoy.net/en/index.html" target="_blank" rel="noopener"
>Ventory&lt;/a> and it just works great.&lt;/p>
&lt;p>In this case we need a Linux and Windows ISO. For Linux, I prefer Arch. For Windows, we need a PE environment. I don&amp;rsquo;t trust those PE ISOs from other people so the best way is to download an official image from Microsoft since we just need some tools and they are included in the installation ISO already.&lt;/p>
&lt;h2 id="method-1-load-windows-from-grub">Method 1: Load Windows From GRUB&lt;/h2>
&lt;p>To prevent Windows from messing up with Linux&amp;rsquo;s bootloader, a good idea is to put Windows&amp;rsquo; bootloader in a VHD file and chainload it from GRUB.&lt;/p>
&lt;h3 id="fix-windows-s-bootloader">Fix Windows&amp;rsquo;s Bootloader&lt;/h3>
&lt;p>Boot into Windows installation ISO.&lt;/p>
&lt;p>Don&amp;rsquo;t start installing. Instead, choose &lt;code>Repair your computer&lt;/code> -&amp;gt; &lt;code>Troubleshoot&lt;/code> -&amp;gt; &lt;code>Command Prompt&lt;/code>.&lt;/p>
&lt;p>We need to create a VHD that contains Windows bootmgr. I used to create a file in 32 MB but it seems too small for the most recent bloated Windows so in case, we use 128 MB here.&lt;/p>
&lt;p>NOTE: This file will be loaded into memory so don&amp;rsquo;t make it too big.&lt;/p>
&lt;p>In diskpart, use &lt;code>list volume&lt;/code> to confirm EFI partition volume letter. Usually it will not be assigned by PE environment automatically.&lt;/p>
&lt;p>NOTE: The file can be put in Windows partition though. It requires extra setup like load NTFS module for grub and find it&amp;rsquo;s root. That&amp;rsquo;s too cumbersome.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; diskpart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; list volume
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># EFI partition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="k">select&lt;/span> volume &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>e:&lt;span class="se">\b&lt;/span>ootmgr.vhd &lt;span class="nv">maximum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">128&lt;/span> &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>fixed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>e:&lt;span class="se">\b&lt;/span>ootmgr.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; attach vdisk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; convert mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create partition primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; format &lt;span class="nv">fs&lt;/span>&lt;span class="o">=&lt;/span>ntfs quick
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now the bootloader VHD is mounted at &lt;code>F:&lt;/code>. Then write the boot record and create boot configuration files.&lt;/p>
&lt;p>NOTE: Windows partition volume letter should be confirmed in &lt;code>diskpart&lt;/code> above. It&amp;rsquo;s usually assigned by PE automatically. In this case it is &lt;code>C:&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; bootsect /nt60 e: /mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; bcdboot c:&lt;span class="se">\W&lt;/span>indows /l en-us /s e: /f uefi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="add-window-to-grub">Add Window to GRUB&lt;/h3>
&lt;p>Boot into Linux and confirm EFI partition UUID where you put the Windows bootloader VHD file. In command line:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ lsblk -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Configure GRUB menu to include Windows. Assume the EFI partition is mounted at &lt;code>/boot/efi&lt;/code> and &lt;code>memdisk&lt;/code> (got from &lt;code>syslinux&lt;/code>) is put at EFI partition&amp;rsquo;s root.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;/etc/grub.d/40_custom
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">menuentry &amp;#34;Windows 10&amp;#34; {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> search --set=root --no-floppy --fs-uuid 1DB1-9C31
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> linux16 /memdisk harddisk
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> initrd16 /bootmgr.vhd
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="problem">Problem&lt;/h3>
&lt;p>I found that on Fedora &lt;code>linux16&lt;/code> and &lt;code>initrd16&lt;/code> is not available by default. A workaround must be done. If it comes in this case, I suggest to use method 2 below.&lt;/p>
&lt;h2 id="method-2-add-windows-back-to-uefi-menu">Method 2: Add Windows Back To UEFI Menu&lt;/h2>
&lt;p>This method is simpler and it takes advantage of UEFI boot menu but there is possibility that Windows is going to break Linux if Linux is the default.&lt;/p>
&lt;h3 id="fix-windows-s-bootloader">Fix Windows&amp;rsquo;s Bootloader&lt;/h3>
&lt;p>Boot into Windows installation ISO.&lt;/p>
&lt;p>Don&amp;rsquo;t start installing. Instead, choose &lt;code>Repair your computer&lt;/code> -&amp;gt; &lt;code>Troubleshoot&lt;/code> -&amp;gt; &lt;code>Command Prompt&lt;/code>.&lt;/p>
&lt;p>In diskpart, use &lt;code>list volume&lt;/code> to confirm EFI partition volume letter. Usually it will not be assigned by PE environment automatically.&lt;/p>
&lt;p>First, mount EFI partition and backup Linux EFI files because Windows will overwrite the default settings :).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; diskpart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; list volume
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># EFI partition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="k">select&lt;/span> volume &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Backup default UEFI entry (Linux)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; &lt;span class="nb">cd&lt;/span> /d e:&lt;span class="se">\E&lt;/span>FI
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; ren BOOT linux_BOOT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then Create Windows boot files.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Windows volume is C: confirmed from diskpart above&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; bcdboot c:&lt;span class="se">\W&lt;/span>indows /l en-us /s e: /f uefi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Lastly, restore Linux as the default start option. If you want Windows to be the default, leave it as it.&lt;/p>
&lt;p>NOTE: For Fedora it seems to be a problem to be a none-default entry when log into display manager. Not sure why. So it&amp;rsquo;d be better to restore default for Fedora.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Restore default Linux entry&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; ren Boot Microsoft_Boot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; ren linux_BOOT BOOT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>VNC Quick Guide</title><link>https://peromage.github.io/p/vnc-quick-guide/</link><pubDate>Wed, 15 Jun 2022 17:40:00 +0000</pubDate><guid>https://peromage.github.io/p/vnc-quick-guide/</guid><description>&lt;p>I found that every time when I try to setup VNC for remote access I always have troubles configuring it. I believe this is due to some conceptions which can be easily confusing. So this post serves both notes and reminder for myself.&lt;/p>
&lt;h2 id="choose-a-vnc-server">Choose a VNC Server&lt;/h2>
&lt;p>Generally I use &lt;a class="link" href="https://tigervnc.org/" target="_blank" rel="noopener"
>TigerVNC&lt;/a>. It&amp;rsquo;s a fork of &lt;em>TightVNC&lt;/em> and the performance is pretty good. Also, it&amp;rsquo;s easy to configure. However, when it comes to installation there are two types of servers: standalone and scraping.&lt;/p>
&lt;p>The difference is:&lt;/p>
&lt;ul>
&lt;li>Standalone: It creates a new X server when the client is connected. Independent from the local X server.&lt;/li>
&lt;li>Scraping: It mirrors the local X server. Pretty much like screen sharing.&lt;/li>
&lt;/ul>
&lt;p>Usually they are shipped with individual packages. To install, for example, on Ubuntu&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo apt install tigervnc-standalone-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo apt install tigervnc-scraping-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="standalone-server">Standalone Server&lt;/h2>
&lt;p>Configuring a standalone server is fairly easy. You would only need three things: client password, server config and server startup script. They are all located under &lt;code>$HOME/.vnc/&lt;/code>.&lt;/p>
&lt;ol>
&lt;li>Create the password file.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vncpasswd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Create the server config file (&lt;code>$HOME/.vnc/config&lt;/code>). A minimal configuration is shown as following.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">geometry&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1366x768&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">alwaysshared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Create the server startup script (&lt;code>$HOME/.vnc/xstartup&lt;/code>). This is also a minimal configuration.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">unset&lt;/span> DBUS_SESSION_BUS_ADDRESS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vncconfig -iconic &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dbus-launch --exit-with-session /usr/bin/gnome-session --session&lt;span class="o">=&lt;/span>ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Be aware that the last line &lt;code>dbus-launch&lt;/code> is important on some distros that are shipped with default desktop environment. Without it the VNC server could not be started correctly. This is because the newly launched desktop environment tries to reuse the existing D-Bus but it&amp;rsquo;s occupied by the local X server already. &lt;code>dbus-launch&lt;/code> makes sure it runs in its own little world. See &lt;code>dbus-launch&lt;/code>&amp;rsquo;s man page for details.&lt;/p>
&lt;ol>
&lt;li>Start the server. Make sure the display port is not used by anyone else.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vncserver :1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Connect from the client. On the remote PC:&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ssh -L 5901:localhost:5901 -t user@ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The TCP port depends on the display port used to start the VNC server. The equation is like: TCP_PORT = 5900 + DISPLAY_PORT. Usually the &lt;code>:0&lt;/code> is taken by local X server.&lt;/p>
&lt;p>Use any VNC client to connect to &lt;code>localhost:5901&lt;/code>.&lt;/p>
&lt;h2 id="scraping-server">Scraping Server&lt;/h2>
&lt;p>Configuring a scraping server is slightly different from the standalone server but it&amp;rsquo;s not hard.&lt;/p>
&lt;ol>
&lt;li>Create the password file. Same with the standalone server.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vncpasswd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Start the server. This is where it&amp;rsquo;s different from the standalone one. Since it replicates the local X server it doesn&amp;rsquo;t need the configuration.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ x0vncserver -rfbauth &lt;span class="nv">$HOME&lt;/span>/.vnc/passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Don&amp;rsquo;t forget to specify the password file or you&amp;rsquo;ll not be able to connect to it.&lt;/p>
&lt;ol>
&lt;li>Connect from the client. Same with the standalone server. On the remote PC:&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ssh -L 5900:localhost:5900 -t user@ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Local X server already uses display port &lt;code>:0&lt;/code>. Then use any VNC client to connect to &lt;code>localhost:5900&lt;/code>.&lt;/p>
&lt;h2 id="synonyms-of-tigervnc">Synonyms of TigerVNC&lt;/h2>
&lt;p>I was confused by the TigerVNC since there are similar commands. It turned out they are the same.&lt;/p>
&lt;ul>
&lt;li>&lt;code>vncserver&lt;/code> -&amp;gt; &lt;code>tigervncserver&lt;/code>&lt;/li>
&lt;li>&lt;code>vncconfig&lt;/code> -&amp;gt; &lt;code>tigervncconfig&lt;/code>&lt;/li>
&lt;li>&lt;code>vncpasswd&lt;/code> -&amp;gt; &lt;code>tigervncpasswd&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Use Git Worktree to Work with Multiple Checkout at the Same Time</title><link>https://peromage.github.io/p/use-git-worktree-to-work-with-multiple-checkout-at-the-same-time/</link><pubDate>Mon, 06 Jun 2022 00:30:00 +0000</pubDate><guid>https://peromage.github.io/p/use-git-worktree-to-work-with-multiple-checkout-at-the-same-time/</guid><description>&lt;h2 id="troubles">Troubles&lt;/h2>
&lt;p>When working with a complicated project where you have to compare different history versions side by side, it soon becomes frustrating frequently checking out refs.&lt;/p>
&lt;p>The old stupid way is to clone multiple repos and checkout to the specific revisions. When the project is big this might be a trouble because you&amp;rsquo;re basically duplicating files.&lt;/p>
&lt;h2 id="savior">Savior&lt;/h2>
&lt;p>Git provides a convenience sub-command &lt;code>worktree&lt;/code> to checkout a specific ref in another directory without duplicating files.&lt;/p>
&lt;h3 id="add-a-new-checkout">Add a New Checkout&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git worktree add ../foo-ref-1 &amp;lt;ref&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Of course you can add as many checkouts as you want.&lt;/p>
&lt;h3 id="remove-a-checkout">Remove a Checkout&lt;/h3>
&lt;p>When the checkout is no longer needed, it can be deleted from this command.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git worktree remove --force ../foo-ref-1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If there are uncommitted changes git will prevent you from deleting the directory. In this case &lt;code>--force&lt;/code> flag is needed.&lt;/p></description></item><item><title>Autoloading in Emacs</title><link>https://peromage.github.io/p/autoloading-in-emacs/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://peromage.github.io/p/autoloading-in-emacs/</guid><description>&lt;p>Autoloading is a neat feature in Emacs. It speeds up Emacs by lazy load the files. But it could be a little confusing if you&amp;rsquo;re switching from Vim.&lt;/p>
&lt;h2 id="myth-not-working-as-expected">Myth - Not Working as Expected&lt;/h2>
&lt;p>If you have used Vim you know in Vim you can put your library files to the load path variable and Vim autoloads them whenever one of the functions/variables is used. Initially I thought this is the same in Emacs but with a little effort to put the magic autoload comments before the function/variable definition. It turned out I was wrong. When I called my functions Emacs could not find them until I explicitly require them. This is obviously not my intention.&lt;/p>
&lt;h2 id="make-it-work">Make It Work&lt;/h2>
&lt;p>After carefully reading the document, I got that the magic autoload comment is just a &lt;a class="link" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Autoload.html#index-autoloadp" target="_blank" rel="noopener"
>autoload cookie&lt;/a> that guides Emacs to generate the real autoload code. In one word, I have to define the function/variable autoload definition anyways. But with the cookies it simplifies the process.&lt;/p>
&lt;ol>
&lt;li>Add magic comment &lt;code>;;;###autoload&lt;/code> before the desired function/variable definition.&lt;/li>
&lt;li>&lt;code>M-x&lt;/code> &lt;code>update-file-autoloads&lt;/code> command on the library file which contains the definitions that need to be autoloaded. Store that generated autoload definition file with a different name.&lt;/li>
&lt;li>Require that autoload definition file in the &lt;code>init.el&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>That&amp;rsquo;s the process to autoload the custom library. The downside is the &lt;code>update-file-autoloads&lt;/code> command has to be called every time the library file is updated.&lt;/p>
&lt;p>Alternative way is to use &lt;code>package-install-from-buffer&lt;/code> to install the library file as a package. &lt;code>package.el&lt;/code> does the dirty work for you, takes care of autoload definition generation and loading automatically.&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>&lt;a class="link" href="https://emacs.stackexchange.com/questions/8023/how-to-use-autoload" target="_blank" rel="noopener"
>https://emacs.stackexchange.com/questions/8023/how-to-use-autoload&lt;/a>&lt;/p></description></item><item><title>Use Org Mode to Manage My Blog</title><link>https://peromage.github.io/p/use-org-mode-to-manage-my-blog/</link><pubDate>Sun, 05 Jun 2022 23:00:00 +0000</pubDate><guid>https://peromage.github.io/p/use-org-mode-to-manage-my-blog/</guid><description>&lt;p>I&amp;rsquo;ve been using Emacs since last year but until recent I started using &lt;code>org-mode&lt;/code> seriously. After spending a couple of days reading and watching all kinds of org tutorial as well as using it for documentation, I realized that people who invented this must geniuses.&lt;/p>
&lt;p>Org document seems similar with Markdown: they are text markup format. However, Org provides far more capabilities to store metadata and greater editing experience together with Emacs&amp;rsquo; &lt;code>org-mode&lt;/code>.&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>I used to use Markdown to write my blog articles and use &lt;em>Hugo&lt;/em> to generate static files.&lt;/p>
&lt;p>The workflow is pretty much like:&lt;/p>
&lt;ol>
&lt;li>Create a new Markdown with header by either snippet template from text editor or Hugo command.&lt;/li>
&lt;li>Write the article.&lt;/li>
&lt;li>Set last modified time upon finished.&lt;/li>
&lt;li>Commit and push then let GitHub CI to generate static files automatically.&lt;/li>
&lt;/ol>
&lt;p>It looks typical but later on I found it was really frustrating to manage my articles:&lt;/p>
&lt;ol>
&lt;li>I always forgot to update the last modified time.&lt;/li>
&lt;li>Tags and categories were set in the header each file. It&amp;rsquo;s difficult check existing tags and categories and make them consistent in the new articles. For example, I always forgot whether a tag or category was capitalized or dash separated.&lt;/li>
&lt;li>Painful to browse.&lt;/li>
&lt;/ol>
&lt;p>Because of those troubles I gradually lost interests writing articles until I found &lt;code>org-mode&lt;/code>. So I started planning to manage my articles with it.&lt;/p>
&lt;h2 id="choose-the-right-way">Choose the Right Way&lt;/h2>
&lt;p>By checking Hugo&amp;rsquo;s documents, I found that it supports Org backend with &lt;a class="link" href="https://github.com/niklasfasching/go-org" target="_blank" rel="noopener"
>go-org&lt;/a>. However it seems like just another Markdown method but in Org syntax. Apparently it doesn&amp;rsquo;t use the full Org capabilities.&lt;/p>
&lt;p>Later I found &lt;a class="link" href="https://ox-hugo.scripter.co/" target="_blank" rel="noopener"
>ox-hugo&lt;/a> which is an Org backend in Emacs used for Org file export. The idea is to write articles in Org syntax with metadata and whatever you like to do in &lt;code>org-mode&lt;/code> and then export to Markdown files through &lt;code>ox-hugo&lt;/code>. Finally feed the Markdown files to the Hugo engine. The killer feature is that it supports exporting from subtrees, which means you can manage all my articles in one file categorize them with ease (by the first level outline). And since all the articles are in the same visible file, they can be refiled and move around with &lt;code>org-mode&lt;/code> key bindings. Also all tags are visible and can be applied very easily. It gives you a lot flexibility to manage the articles in this way.&lt;/p>
&lt;p>At the time when this article is read, it&amp;rsquo;s been written in &lt;code>org-mode&lt;/code> already. I even use the same file to manage other pages of my blog like about, archives and search pages. You can checkout my original Org file &lt;a class="link" href="https://github.com/peromage/peromage.github.io/blob/master/myblog/blog.org" target="_blank" rel="noopener"
>here&lt;/a> to figure out how they are defined.&lt;/p>
&lt;h2 id="update-ci-to-build-static-files-on-pushing">Update CI to Build Static Files on Pushing&lt;/h2>
&lt;p>Since all the articles are managed by the Org file there is no point to keep the old Markdown files. I need to make GitHub CI export the Org file for me so I don&amp;rsquo;t have to do it locally.&lt;/p>
&lt;p>The problem is to setup Emacs on the job runner. Luckily there are people doing this already by providing a GitHub &lt;a class="link" href="https://github.com/marketplace/actions/set-up-emacs" target="_blank" rel="noopener"
>action&lt;/a>. Thanks Steve Purcell and the people who worked on this!&lt;/p>
&lt;p>Now with the Emacs setup ready, one problem left is to export from Org files to Markdown. The idea is pretty straight forward: install &lt;code>ox-hugo&lt;/code> from MELPA and export through it. A simple shell command should do the job.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">emacs -nw --batch --eval &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="s1">&amp;#39;(progn
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (package-initialize)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (add-to-list (quote package-archives) (quote (&amp;#34;melpa&amp;#34; . &amp;#34;https://melpa.org/packages/&amp;#34;)))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (package-refresh-contents)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (package-install (quote ox-hugo))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (find-file &amp;#34;myblog/blog.org&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (org-hugo-export-wim-to-md :all))&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After that, feed the generated Markdown files to Hugo engine. No difference from the typical Hugo &lt;a class="link" href="https://gohugo.io/hosting-and-deployment/hosting-on-github/" target="_blank" rel="noopener"
>workflow&lt;/a>.&lt;/p>
&lt;p>See here for my &lt;a class="link" href="https://github.com/peromage/peromage.github.io/blob/master/org-export.sh" target="_blank" rel="noopener"
>job runner script&lt;/a> and &lt;a class="link" href="https://github.com/peromage/peromage.github.io/blob/master/.github/workflows/gh-pages.yml" target="_blank" rel="noopener"
>workflow configuration&lt;/a>.&lt;/p>
&lt;h2 id="fix-the-last-modified-date">Fix the Last Modified Date&lt;/h2>
&lt;p>By doing this workflow all the files are always generated so their last modified date are constantly changed (with &lt;code>#+hugo_auto_set_lastmod: t&lt;/code> in the header). &lt;code>ox-hugo&lt;/code> seems not to have a proper solution to calculate the diff between changes (could be hard though). The best way to solve this is to add either a &lt;code>:LOGBOOK:&lt;/code> or a &lt;code>EXPORT_HUGO_LASTMOD&lt;/code> property to the subtree. Or even simpler to use &lt;em>TODO&lt;/em> and &lt;em>DONE&lt;/em> workflow since it generates &lt;code>:LOGBOOK:&lt;/code> automatically. When any one of them specified &lt;code>ox-hugo&lt;/code> will the value from it &lt;a class="link" href="https://ox-hugo.scripter.co/doc/dates/#last-modified" target="_blank" rel="noopener"
>instead of generating a new date&lt;/a>.&lt;/p>
&lt;p>Since manually changing the modification time in &lt;code>EXPORT_HUGO_LASTMOD&lt;/code> sucks and it&amp;rsquo;s the same solution back in the Markdown style, this time I decided to use &amp;ldquo;Org&amp;rdquo; way to fix this problem. By looking at the document, &lt;code>:LOGBOOK:&lt;/code> has &lt;a class="link" href="https://ox-hugo.scripter.co/doc/org-meta-data-to-hugo-front-matter/#front-matter-precedence" target="_blank" rel="noopener"
>the highest priority&lt;/a> among other options and also has a synergy with todo workflow. That&amp;rsquo;s cool. I can treat my article writing like any other tasks.&lt;/p>
&lt;p>But I don&amp;rsquo;t quite like the default keywords &lt;em>TODO&lt;/em> and &lt;em>DONE&lt;/em> since they doesn&amp;rsquo;t sound semantic to the articles. So I added a header to my blog Org file: &lt;code>#+seq_todo: DRAFT(d) | PUBLISHED(p!)&lt;/code>.&lt;/p>
&lt;p>Then I found another problem that whenever I change the state from &lt;em>DRAFT&lt;/em> to &lt;em>PUBLISHED&lt;/em> there is always a &lt;code>CLOSED&lt;/code> time property added to the article. This is because I have &lt;code>(setq org-log-done 'time)&lt;/code> in my Emacs configuration file. It duplicates &lt;code>:LOGBOOK:&lt;/code> since it has already logged the transition time and I don&amp;rsquo;t want to change my Emacs configuration specific for this file. So I added another header to my blog Org file: &lt;code>#+startup: nologdone&lt;/code> and also make sure the state transition records are always put into the drawer: &lt;code>#+startup: logdrawer&lt;/code>.&lt;/p>
&lt;p>Okay now I should be able to start a new article with &lt;em>DRAFT&lt;/em> prefix and then use &lt;code>C-c C-t&lt;/code> to change it to &lt;em>PUBLISHED&lt;/em> whenever I&amp;rsquo;m done writing. However things are still not going as I expected. Remember the &lt;a class="link" href="https://ox-hugo.scripter.co/doc/org-meta-data-to-hugo-front-matter/#front-matter-precedence" target="_blank" rel="noopener"
>date precedence&lt;/a> page? The first transition to &lt;em>PUBLISHED&lt;/em> state record is recognized as the creation date. Only the second or later records to &lt;em>PUBLISHED&lt;/em> state will be read as the last modified date. That&amp;rsquo;s dumb. To fix this, I added a new todo item and now it&amp;rsquo;s like: &lt;code>#+seq_todo: DRAFT(d) | CREATED(c!) PUBLISHED(p!)&lt;/code>.&lt;/p>
&lt;p>Now my blog header is like:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">#+author: Fang Deng
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+startup: show2levels
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+startup: nologdone
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+startup: logdrawer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+seq_todo: DRAFT(d) | CREATED(c!) PUBLISHED(p!)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+options: d:t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+hugo_base_dir: ../
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+hugo_section: blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#+hugo_auto_set_lastmod: t
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Don&amp;rsquo;t forget the &lt;code>#+options: d:t&lt;/code>. &lt;code>ox-hugo&lt;/code> will not export &lt;code>:LOGBOOK:&lt;/code> without it.&lt;/p>
&lt;p>Finally a sweet snippet file to save my life.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># -*- mode: snippet -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># name: Hugo new article
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># key: hugonew
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># --
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">** DRAFT ${1:TITLE}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:PROPERTIES:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:EXPORT_FILE_NAME: ${1:$(replace-regexp-in-string &amp;#34;[^A-Za-z0-9._-]&amp;#34; &amp;#34;&amp;#34; (replace-regexp-in-string &amp;#34; &amp;#34; &amp;#34;-&amp;#34; (downcase yas-text)))}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:END:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:LOGBOOK:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- State &amp;#34;CREATED&amp;#34; from [`(string-trim (format-time-string (cdr org-time-stamp-formats)) &amp;#34;&amp;lt;&amp;#34; &amp;#34;&amp;gt;&amp;#34;)`]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:END:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now a new article will come with its creation time. Whenever the article is done, &lt;code>C-c C-t&lt;/code> to mark it &lt;em>PUBLISHED&lt;/em> which will be the last modified time. If the article is modified in the future, simply &lt;code>C-c C-t&lt;/code> again to add another &lt;em>PUBLISHED&lt;/em> state and the last modified time will be refreshed on export. Now I have a neat log book to record my changes. No more manually editing suckers!&lt;/p></description></item><item><title>Initialize std::array at Compile Time</title><link>https://peromage.github.io/p/initialize-stdarray-at-compile-time/</link><pubDate>Wed, 16 Mar 2022 10:25:00 +0000</pubDate><guid>https://peromage.github.io/p/initialize-stdarray-at-compile-time/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>I&amp;rsquo;ve been working on optimization for some C++ code recently. One of the part is to initialize some data at compile time. Consider we have a C style enum definition:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">enum&lt;/span> &lt;span class="nc">Foo&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">AAA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BBB&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CCC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">Foo_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We want to have an array of the enum with undefined initial values &lt;code>999&lt;/code> because by default initialization the values would be &lt;code>0&lt;/code>&amp;rsquo;s. However, &lt;code>std::array&lt;/code> can only be initialized by initializer list, which is said:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Partial initialization
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">constexpr&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Foo_t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">array&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">static_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Foo_t&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="k">static_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Foo_t&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">)};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Results in int equivalent: {999, 999, 0, 0, 0}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If there are a hundred of elements then you have to write all of them down in the list.&lt;/p>
&lt;p>You can, of course, initialize it in a loop but this sacrifices runtime performance.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Runtime initialization
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Foo_t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">array&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="nl">i&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">static_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Foo_t&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Results in int equivalent: {999, 999, 999, 999, 999}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="generating-code-by-templates">Generating code by templates&lt;/h2>
&lt;p>We can use recursive deduction of templates to generate our code. There is a limit that you can only do 1024 times of recursion but in my case it&amp;rsquo;s enough.&lt;/p>
&lt;p>The idea is to count the size to zero and use variadic argument to increase the number of arguments on each recursion. Finally the size of the array will be passed to the bottom and the variadic argument gets expanded.&lt;/p>
&lt;p>It&amp;rsquo;s a pretty simple trick.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="k">template&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">M&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">typename&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">typename&lt;/span>&lt;span class="p">...&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">ARR_IMPL&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="k">constexpr&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ARR_IMPL&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">M&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">&amp;gt;::&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">template&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">typename&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">typename&lt;/span>&lt;span class="p">...&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">ARR_IMPL&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="k">constexpr&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">static_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">U&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">)...};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">template&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">typename&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">ARR&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="k">constexpr&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ARR_IMPL&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;::&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">constexpr&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">array1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ARR&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Foo_t&lt;/span>&lt;span class="o">&amp;gt;::&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">constexpr&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">array2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ARR&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Foo_t&lt;/span>&lt;span class="o">&amp;gt;::&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// array1 results in int equivalent: {999, 999, 999, 999, 999}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// array2 results in int equivalent: {999, 999, 999, 999, 999, ...}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Setup A Gaming VM</title><link>https://peromage.github.io/p/setup-a-gaming-vm/</link><pubDate>Sun, 13 Mar 2022 17:47:00 +0000</pubDate><guid>https://peromage.github.io/p/setup-a-gaming-vm/</guid><description>&lt;h2 id="before-starting">Before starting&lt;/h2>
&lt;p>First thing first. I&amp;rsquo;ve been rarely using Windows over years except for working and gaming. Linux community grows fast and there are a lot alternatives available. On the contrary, Windows gets crapy every year (Office 365 is still good IMO) so there is no reason to run this huge spyware all the time.&lt;/p>
&lt;p>Modern PCs are strong enough to run a VM. Besides most of PCs have both integrated and descret graphic cards. This setup is perfect for gaming VM which requires PCI passthrough.&lt;/p>
&lt;p>In this post, I&amp;rsquo;m not going to explain everything because the ArchWiki is clear enough already. This is just a quick guide for the setup.&lt;/p>
&lt;p>NOTE: Avoid Intel K series CPUs which usually don&amp;rsquo;t have integrated graphic card.&lt;/p>
&lt;h2 id="get-started">Get started&lt;/h2>
&lt;h3 id="identify-your-pc-is-qualified">Identify your PC is qualified&lt;/h3>
&lt;p>To get high graphic performance, your CPU and motherboard must support &lt;code>VT-d&lt;/code> and &lt;code>IOMMU&lt;/code> respectively.&lt;/p>
&lt;p>If not, you can stop here and choose the traditional way to dual-boot Linux and Windows.&lt;/p>
&lt;p>NOTE: you can check &lt;a class="link" href="https://wiki.archlinux.org/title/PCI_passthrough_via_OVMF" target="_blank" rel="noopener"
>PCI passthrough via OVMF&lt;/a> prerequisite section for more information.&lt;/p>
&lt;h3 id="install-qemu">Install QEMU&lt;/h3>
&lt;p>I wrote a script to handle this automatically so just run &lt;a class="link" href="https://github.com/peromage/rice/blob/master/scripts/install-qemu.sh" target="_blank" rel="noopener"
>this script&lt;/a> before hands.&lt;/p>
&lt;p>NOTE: I&amp;rsquo;m using Arch Linux.&lt;/p>
&lt;h3 id="identify-discrete-graphic-card">Identify discrete graphic card&lt;/h3>
&lt;p>In a terminal:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ lspci -nnk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">01:00.0 VGA compatible controller &lt;span class="o">[&lt;/span>0300&lt;span class="o">]&lt;/span>: NVIDIA Corporation GM204 &lt;span class="o">[&lt;/span>GeForce GTX 970&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>10de:13c2&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>rev a1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subsystem: Gigabyte Technology Co., Ltd Device &lt;span class="o">[&lt;/span>1458:367a&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel driver in use: nouveau
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel modules: nouveau
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">01:00.1 Audio device &lt;span class="o">[&lt;/span>0403&lt;span class="o">]&lt;/span>: NVIDIA Corporation GM204 High Definition Audio Controller &lt;span class="o">[&lt;/span>10de:0fbb&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>rev a1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subsystem: Gigabyte Technology Co., Ltd Device &lt;span class="o">[&lt;/span>1458:367a&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel driver in use: snd_hda_intel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel modules: snd_hda_intel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Take a note of the device IDs. In this example I have a Nvidia GTX970 graphic card along with a audio controller. They belong to the same group (domain) you have to take them all.&lt;/p>
&lt;p>In this case I got &lt;code>1458:367a&lt;/code> and &lt;code>1458:367a&lt;/code>. These are the PCI devices that will be passed through to the VM. Other PCI devices can be passed too.&lt;/p>
&lt;h3 id="modify-kernel-parameter">Modify kernel parameter&lt;/h3>
&lt;p>Then we&amp;rsquo;re going to turn IOMMU on and prevent host Linux loading PCI devices that we want to pass-through to the VM.&lt;/p>
&lt;p>The kernel parameter passing could be different depending on the bootloader you use. In this example, I use &lt;code>grub&lt;/code>.&lt;/p>
&lt;p>Open &lt;code>/etc/default/grub&lt;/code> with your favorite text editor. You have to add &lt;code>intel_iommu=on&lt;/code> to the kernel parameter along with &lt;code>vfio-pci.ids=10de:13c2,10de:0fbb&lt;/code> which contains the device IDs you got from the previous step.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/default/grub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Change this line&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;loglevel=3 quiet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;loglevel=3 quiet intel_iommu=on vfio-pci.ids=10de:13c2,10de:0fbb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then update the bootloader config file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The most tricky part is done. Restart the PC now.&lt;/p>
&lt;p>NOTE: You can check &lt;code>dmesg&lt;/code> after reboot to verify IOMMU is turned on successfully.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo dmesg &lt;span class="p">|&lt;/span> grep -i -e DMAR -e IOMMU
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.000000&lt;span class="o">]&lt;/span> ACPI: DMAR 0x00000000BDCB1CB0 0000B8 &lt;span class="o">(&lt;/span>v01 INTEL BDW &lt;span class="m">00000001&lt;/span> INTL 00000001&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.000000&lt;span class="o">]&lt;/span> Intel-IOMMU: enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.028879&lt;span class="o">]&lt;/span> dmar: IOMMU 0: reg_base_addr fed90000 ver 1:0 cap c0000020660462 ecap f0101a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.028883&lt;span class="o">]&lt;/span> dmar: IOMMU 1: reg_base_addr fed91000 ver 1:0 cap d2008c20660462 ecap f010da
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.028950&lt;span class="o">]&lt;/span> IOAPIC id &lt;span class="m">8&lt;/span> under DRHD base 0xfed91000 IOMMU &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536212&lt;span class="o">]&lt;/span> DMAR: No ATSR found
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536229&lt;span class="o">]&lt;/span> IOMMU &lt;span class="m">0&lt;/span> 0xfed90000: using Queued invalidation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536230&lt;span class="o">]&lt;/span> IOMMU &lt;span class="m">1&lt;/span> 0xfed91000: using Queued invalidation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536231&lt;span class="o">]&lt;/span> IOMMU: Setting RMRR:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536241&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:02.0 &lt;span class="o">[&lt;/span>0xbf000000 - 0xcf1fffff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537490&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:14.0 &lt;span class="o">[&lt;/span>0xbdea8000 - 0xbdeb6fff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537512&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:1a.0 &lt;span class="o">[&lt;/span>0xbdea8000 - 0xbdeb6fff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537530&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:1d.0 &lt;span class="o">[&lt;/span>0xbdea8000 - 0xbdeb6fff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537543&lt;span class="o">]&lt;/span> IOMMU: Prepare 0-16MiB unity mapping &lt;span class="k">for&lt;/span> LPC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537549&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:1f.0 &lt;span class="o">[&lt;/span>0x0 - 0xffffff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.182790&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>drm&lt;span class="o">]&lt;/span> DMAR active, disabling use of stolen memory
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="install-the-vm">Install the VM&lt;/h3>
&lt;p>Open virt-manager GUI and follow the guide to setup.&lt;/p>
&lt;p>Some settings should be tweaked specifically:&lt;/p>
&lt;ul>
&lt;li>Overview: Change &lt;em>Firmware&lt;/em> to &lt;code>UEFI&lt;/code>&lt;/li>
&lt;li>CPUs:
&lt;ul>
&lt;li>Change &lt;em>vCPU allocation&lt;/em> to the maximal host CPUs. In this case, it&amp;rsquo;s &lt;code>8&lt;/code>&lt;/li>
&lt;li>Unselect &lt;em>Copy host CPU configuration&lt;/em> and change &lt;em>Model&lt;/em> to &lt;code>host-passthrough&lt;/code>&lt;/li>
&lt;li>Select &lt;em>Manually set CPU topology&lt;/em>. Change &lt;em>Sockets&lt;/em> to &lt;code>1&lt;/code>, &lt;em>Cores&lt;/em> to &lt;code>4&lt;/code>, &lt;em>Threads&lt;/em> to &lt;code>2&lt;/code> (Physical core &lt;code>4&lt;/code> * threads for each core &lt;code>2&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Disk: Change &lt;em>Disk bus&lt;/em> to &lt;code>VirtIO&lt;/code>&lt;/li>
&lt;li>Display Spice: You don&amp;rsquo;t really need it so remove it&lt;/li>
&lt;li>Video: Change to None&lt;/li>
&lt;li>PCI: Add your discrete graphic card as well as anything with it (audio controller etc.)&lt;/li>
&lt;li>USB: Mouse, keyboards, game controllers etc.&lt;/li>
&lt;/ul>
&lt;p>After saving the settins, the installation should start but don&amp;rsquo;t install Windows yet. Instead, force power if off. Open VM settings in XML view, add following content to prevent Nvidia driver installer discovering the VM environment.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;features&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;hyperv&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;vendor_id&lt;/span> &lt;span class="na">state=&lt;/span>&lt;span class="s">&amp;#39;on&amp;#39;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#39;1234567890ab&amp;#39;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/hyperv&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;kvm&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;hidden&lt;/span> &lt;span class="na">state=&lt;/span>&lt;span class="s">&amp;#39;on&amp;#39;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/kvm&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/features&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alternatively, this has the same effect.&lt;/p>
&lt;p>NOTE: &lt;code>win11&lt;/code> is the VM name you&amp;rsquo;ve just created.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo virshpatcher --error43 --vender-id 1234567890ab win11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="install-virtio-drivers">Install virtio drivers&lt;/h3>
&lt;p>In the Windows VM, download the &lt;a class="link" href="https://github.com/virtio-win/virtio-win-pkg-scripts/blob/master/README.md" target="_blank" rel="noopener"
>virtio driver&lt;/a> and install it.&lt;/p>
&lt;p>NOTE: Check &lt;a class="link" href="https://wiki.archlinux.org/title/QEMU" target="_blank" rel="noopener"
>ArchWiki QEMU&lt;/a> for more info&lt;/p>
&lt;h2 id="post-installation">Post installation&lt;/h2>
&lt;p>If you don&amp;rsquo;t want to switch monitors you can try &lt;a class="link" href="https://looking-glass.io/" target="_blank" rel="noopener"
>Looking Glass&lt;/a> which allows you redirect VM display output to a emulated monitor.&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>[&lt;a class="link" href="https://github.com/peromage/rice/blob/master/scripts/install-qemu.sh" target="_blank" rel="noopener"
>QEMU install script&lt;/a>
&lt;a class="link" href="https://wiki.archlinux.org/title/QEMU" target="_blank" rel="noopener"
>ArchWiki QEMU&lt;/a>
&lt;a class="link" href="https://wiki.archlinux.org/title/PCI_passthrough_via_OVMF" target="_blank" rel="noopener"
>ArchWiki OVMF&lt;/a>
&lt;a class="link" href="https://looking-glass.io/" target="_blank" rel="noopener"
>Looking Glass&lt;/a>
&lt;a class="link" href="https://github.com/virtio-win/virtio-win-pkg-scripts/blob/master/README.md" target="_blank" rel="noopener"
>Virtio driver&lt;/a>&lt;/p></description></item><item><title>Fix Metadata in Google Photo Takeout</title><link>https://peromage.github.io/p/fix-metadata-in-google-photo-takeout/</link><pubDate>Sun, 13 Mar 2022 00:12:00 +0000</pubDate><guid>https://peromage.github.io/p/fix-metadata-in-google-photo-takeout/</guid><description>&lt;p>Google Photo sucks.&lt;/p>
&lt;h2 id="troubles">Troubles&lt;/h2>
&lt;p>When exporting photos from Google Photo, a bunch of JSON files come with your photos. Those JSON files contain metadata which is supposed to be stored with your photo files. If you simple import those photo files into another photo manager you will most likely not get a chronological view. Obviously, Google does on purpose so that you will not leave it easily.
However, there is a workaround that is able to merge those metadata into your photos.&lt;/p>
&lt;h2 id="restore-the-metadate">Restore the Metadate&lt;/h2>
&lt;ol>
&lt;li>Get &lt;code>exiftool&lt;/code>: &lt;a class="link" href="https://github.com/exiftool/exiftool" target="_blank" rel="noopener"
>https://github.com/exiftool/exiftool&lt;/a>&lt;/li>
&lt;li>Export your Google Photos and extract the downloaded compressed files into a folder&lt;/li>
&lt;li>Save the following content to &lt;code>fix-args.txt&lt;/code>&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Usage: exiftool -@ fix-args.txt &amp;lt;takeout_dir&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-r&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">%s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-tagsFromFile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">%d/%F.json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-ext *&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">--ext json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-overwrite_original&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-progress&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-GPSAltitude&amp;lt;GeoDataAltitude&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-GPSLatitude&amp;lt;GeoDataLatitude&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-GPSLongitude&amp;lt;GeoDataLongitude&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-DateTimeOriginal&amp;lt;PhotoTakenTimeTimestamp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-ModifyDate&amp;lt;PhotoLastModifiedTimeTimestamp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-CreateDate&amp;lt;CreationTimeTimestamp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-GPSAltitudeRef&amp;lt;GeoDataAltitude&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-GPSLatitudeRef&amp;lt;GeoDataLatitude&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">-GPSLongitudeRef&amp;lt;GeoDataLongitude&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Execute&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ exiftool -@ fix-args.txt &amp;lt;takeout_dir&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Delete JSON files and import your photos to somewhere else&lt;/li>
&lt;/ol>
&lt;p>This argument file contains the fields that are meaningful to me. If you need to merge additional fields you can append them to the last. For details, check the man page of &lt;code>exiftool&lt;/code>.&lt;/p></description></item><item><title>Shadowsocks Quick Setup</title><link>https://peromage.github.io/p/shadowsocks-quick-setup/</link><pubDate>Sun, 13 Mar 2022 00:03:00 +0000</pubDate><guid>https://peromage.github.io/p/shadowsocks-quick-setup/</guid><description>&lt;p>This note is written for my personal convenience.&lt;/p>
&lt;h2 id="server-setup">Server Setup&lt;/h2>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>Use system package manager to install &lt;code>shadowsocks-libev&lt;/code>. In this case, for Arch Linux it is &lt;code>pacman&lt;/code>.&lt;/p>
&lt;p>There is also a Python package which can be installed by &lt;code>pip&lt;/code> but it seems not to be maintained for a long time.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo pacman -S shadowsocks-libev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="shadowsocks-server-configuration">Shadowsocks Server Configuration&lt;/h3>
&lt;p>Config file is located at &lt;code>/etc/shadowsocks/myserver.json&lt;/code>. On FreeBSD it is &lt;code>/usr/local/etc/shadowsocks/myserver.json&lt;/code>&lt;/p>
&lt;p>The file name can vary.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server_port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8388&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mypassword&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;chacha20-ietf-poly1305&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fast_open&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;workers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;nameserver&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;8.8.8.8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: For server, &lt;code>&amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;&lt;/code> and &lt;code>&amp;quot;local_port&amp;quot;: 1080&lt;/code> would cause problems so don&amp;rsquo;t them.&lt;/p>
&lt;h3 id="start-the-server-as-a-system-service">Start the Server as A System Service&lt;/h3>
&lt;p>The server can be started in the background but it&amp;rsquo;s not persistent after reboot.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ ss-server -c /etc/shadowsocks/myserver.json &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Use &lt;code>systemd&lt;/code> to make it run automatically.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: The config file name has to be placed after &lt;code>@&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo systemctl &lt;span class="nb">enable&lt;/span> shadowsocks-libev-server@myserver
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo systemctl start shadowsocks-libev-server@myserver
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="client-helper">Client Helper&lt;/h2>
&lt;h3 id="ss-access-key-generation-script--bash-script">SS Access Key Generation Script (Bash Script)&lt;/h3>
&lt;p>This script will prompt you to input parameters that are in the config file to generate a base64 encoded link.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># Usage: this_script.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Method: &amp;#39;&lt;/span> -r ss_method
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Password: &amp;#39;&lt;/span> -r ss_password
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Server IP: &amp;#39;&lt;/span> -r ss_server_ip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Server Port: &amp;#39;&lt;/span> -r ss_server_port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ss://&amp;#34;&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_method&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_password&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">@&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_server_ip&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_server_port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> base64&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ss-access-key-generation-script--javascript">SS Access Key Generation Script (JavaScript)&lt;/h3>
&lt;p>This approch requires Node.js but it can parse config file automatically.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Usage: node this_script.js &amp;lt;config_file&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">argv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;nothing&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">config_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">config_json&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">config_file&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">ss_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ss://&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">btoa&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;method&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;password&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">@&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;server&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;server_port&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ss_url&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>SSH Over GPG Agent</title><link>https://peromage.github.io/p/ssh-over-gpg-agent/</link><pubDate>Sun, 13 Mar 2022 00:02:00 +0000</pubDate><guid>https://peromage.github.io/p/ssh-over-gpg-agent/</guid><description>&lt;p>This is a quick note of &lt;code>gpg-agent&lt;/code> setup for SSH.&lt;/p>
&lt;h2 id="quick-setup">Quick Setup&lt;/h2>
&lt;ol>
&lt;li>Import your GPG authentication key.&lt;/li>
&lt;li>Enable SSH support for &lt;code>gpg-agent&lt;/code>.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> enable-ssh-support &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.gnupg/gpg-agent.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Get the authentication keygrip.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ gpg -k --with-keygrip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Add the authentication key to the keychain (replace &lt;code>KEYGRIP&lt;/code> with the value obtained from the previous step)&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> KEYGRIP &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.gnupg/sshcontrol
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Add the following init code to &lt;code>.bashrc&lt;/code>&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">unset&lt;/span> SSH_AGENT_PID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SSH_AUTH_SOCK&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>gpgconf --list-dirs agent-ssh-socket&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GPG_TTY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>tty&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg-connect-agent updatestartuptty /bye &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Kill any running &lt;code>ssh-agent&lt;/code> and &lt;code>gpg-agent&lt;/code>, and then open a new Bash session.&lt;/li>
&lt;/ol>
&lt;h2 id="misc">Misc&lt;/h2>
&lt;h3 id="export-ssh-public-keys">Export SSH Public Keys&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ gpg --export-ssh-key &amp;lt;uid/fingerprint&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Minimalist's Multi-boot USB Drive</title><link>https://peromage.github.io/p/minimalists-multi-boot-usb-drive/</link><pubDate>Wed, 26 Jan 2022 20:34:00 +0000</pubDate><guid>https://peromage.github.io/p/minimalists-multi-boot-usb-drive/</guid><description>&lt;h2 id="story">Story&lt;/h2>
&lt;p>Recently I&amp;rsquo;ve realized a fact that I always have needs to keep a multi-boot USB in my pocket for either Linux or Windows installation. There are a lot tools out there already but I don&amp;rsquo;t really like them. At least, I mean, they are too flashy to me. A beautiful boot menu seems not to be attractive. What I need is just a simple and practical maybe a little ugly boot device. It should be minimalist. More importantly, it has to be easy to setup with the tools on the system already and maintainable. No funky scripts.&lt;/p>
&lt;h2 id="old-solution-clunky">Old Solution - Clunky&lt;/h2>
&lt;p>I&amp;rsquo;ve been using this solution for a very long time. Setup is pretty straight forward.&lt;/p>
&lt;p>The partition scheme used on the USB drive is like (GPT):&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Partition&lt;/th>
&lt;th>Size&lt;/th>
&lt;th>Filesystem&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>/dev/sda1&lt;/td>
&lt;td>100 GB&lt;/td>
&lt;td>NTFS&lt;/td>
&lt;td>Data partition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda2&lt;/td>
&lt;td>512 MB&lt;/td>
&lt;td>FAT&lt;/td>
&lt;td>EFI partition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda3&lt;/td>
&lt;td>1 MB&lt;/td>
&lt;td>No filesystem&lt;/td>
&lt;td>BIOS boot partition used by GRUB&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda4&lt;/td>
&lt;td>8 GB&lt;/td>
&lt;td>NTFS&lt;/td>
&lt;td>Windows ISO files&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda5&lt;/td>
&lt;td>2 GB&lt;/td>
&lt;td>FAT&lt;/td>
&lt;td>Arch Linux ISO files&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>So the idea is having a big data partition at the front for better access, then installing GRUB files on the second EFI partition with both EFI and BIOS support (Implemented by the third BIOS boot partition. The partition order doesn&amp;rsquo;t matter). Finally, create dedicated partitions to contain the extracted files from installation ISOs.&lt;/p>
&lt;p>When the USB drive is plugged in, I can use grub command line to chainload the EFI file that is located in the ISO partition, or the VBR if it&amp;rsquo;s booted with legacy mode.&lt;/p>
&lt;p>Well, it&amp;rsquo;s usable but I still feel that it is too much for a small USB drive - too many partitions. If I plug the drive in for just data exchange, there would be a a bunch of partitions mounted and the notification is quite annoying. So I started thinking that there must be a simpler way to do it.&lt;/p>
&lt;h2 id="new-solution-much-better">New Solution - Much Better&lt;/h2>
&lt;h3 id="partitioning">Partitioning&lt;/h3>
&lt;p>The goal is simplicity so the new partition scheme is like this:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Partition&lt;/th>
&lt;th>Size&lt;/th>
&lt;th>Filesystem&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>/dev/sda1&lt;/td>
&lt;td>100 GB&lt;/td>
&lt;td>NTFS&lt;/td>
&lt;td>Data partition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda2&lt;/td>
&lt;td>512 MB&lt;/td>
&lt;td>FAT&lt;/td>
&lt;td>EFI partition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda3&lt;/td>
&lt;td>1 MB&lt;/td>
&lt;td>No filesystem&lt;/td>
&lt;td>BIOS boot partition used by GRUB (Optional)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>The third BIOS boot partition is not really necessary since most of computers nowadays are using UEFI. If you really need the legacy compatibility, you can create one. I&amp;rsquo;ll keep it for now.&lt;/p>
&lt;h3 id="installing-grub">Installing GRUB&lt;/h3>
&lt;p>Typical GRUB insallation but install for both EFI and BIOS.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo mount /dev/sda2 /mnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo grub-install --target&lt;span class="o">=&lt;/span>x86_64-efi --efi-directory&lt;span class="o">=&lt;/span>/mnt --boot-directory&lt;span class="o">=&lt;/span>/mnt --removable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo grub-install --target&lt;span class="o">=&lt;/span>i386-pc --boot-directory&lt;span class="o">=&lt;/span>/mnt /dev/sda
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Don&amp;rsquo;t forget to create a GRUB menu config file. Otherwise GRUB will boot into its command line interface (If you know what you&amp;rsquo;re doing). It&amp;rsquo;s a good idea to put a editable config file in the data partition since it will be the most used partition. However, GRUB reads the file in the EFI partition by default: &lt;code>(esp)/grub/grub.cfg&lt;/code>. We can tell GRUB to read out custom config file after that.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># (esp)/grub/grub.cfg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">search --set&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">root --file /boot.cfg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">configfile /boot.cfg&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thus we are done with the EFI partition. All the menu configuration will go into &lt;code>boot.cfg&lt;/code> in the data partition.&lt;/p>
&lt;h3 id="linux-installer">Linux Installer&lt;/h3>
&lt;p>Most of modern Linux distros support booting from a loop device. That is to say, we don&amp;rsquo;t have to extract the content of ISO files. Using GRUB &lt;code>loopback&lt;/code> command can easily mount a ISO and boot from there. But chainloading the EFI or VBF is not possible. Based on the &lt;a class="link" href="https://www.gnu.org/software/grub/manual/grub/grub.html#Loopback-booting" target="_blank" rel="noopener"
>GRUB manual&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>GRUB is able to read from an image (be it one of CD or HDD) stored on any of its accessible storages (refer to see loopback command). However the OS itself should be able to find its root. This usually involves running a userspace program running before the real root is discovered.&lt;/p>
&lt;/blockquote>
&lt;p>EFI bootloader usually will fail to find the root device by this method. However, we can manually load the kernel and ramdisk in which we can specify the root device by ourselves.&lt;/p>
&lt;h4 id="load-linux-iso">Load Linux ISO&lt;/h4>
&lt;p>I&amp;rsquo;m using Arch Linux here for example.&lt;/p>
&lt;ol>
&lt;li>Put the ISO file to &lt;code>(data)/images/archlinux-2022.01.01-x86_64.iso&lt;/code>.&lt;/li>
&lt;li>Mount ISO. We need to find the kernel loading parameters.&lt;/li>
&lt;li>In the file &lt;code>(arch)/syslinux/archiso_sys-linux.cfg&lt;/code> we would see&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copy to RAM boot option&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">LABEL arch64ram&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TEXT HELP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Boot the Arch Linux install medium on BIOS with Copy-to-RAM option&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">It allows you to install Arch Linux or perform system maintenance.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ENDTEXT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">MENU LABEL Arch Linux install medium (x86_64, BIOS, Copy to RAM)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">LINUX /arch/boot/x86_64/vmlinuz-linux&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">INITRD /arch/boot/intel-ucode.img,/arch/boot/amd-ucode.img,/arch/boot/x86_64/initramfs-linux.img&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">APPEND archisobasedir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">arch archisolabel=ARCH_202201 copytoram&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This is a &lt;code>syslinux&lt;/code> config file. Parameters after &lt;code>APPEND&lt;/code> are the ones that we&amp;rsquo;re looking for.&lt;/p>
&lt;p>Then add the following content to &lt;code>(data)/boot.cfg&lt;/code>. When copying the &lt;code>initrd&lt;/code> parameters, don&amp;rsquo;t forget to remove commas.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">menuentry &amp;#34;Archiso 202201 RAM&amp;#34; {&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">search --set&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">root --file /boot.cfg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> loopback loop /images/archlinux-2022.01.01-x86_64.iso
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> set root=(loop)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> linux /arch/boot/x86_64/vmlinuz-linux archisobasedir=arch archisolabel=ARCH_202201 copytoram
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> initrd /arch/boot/intel-ucode.img /arch/boot/amd-ucode.img /arch/boot/x86_64/initramfs-linux.img&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then the Linux installer is done. If we need more distros, the process is similar.&lt;/p>
&lt;h3 id="windows-installer">Windows Installer&lt;/h3>
&lt;p>I prefer to use NTFS as my data partition&amp;rsquo;s file system because it works on both Linux and Windows, and supports big files. Also I usually just keep one copy of Windows installer so for Windows, I can simply dump the ISO content to the data partition&amp;rsquo;s root. I don&amp;rsquo;t mind the extra a few folders there. Plus some of them can be safely deleted. Then chainloading from GRUB is possible.&lt;/p>
&lt;p>In &lt;code>(data)/boot.cfg&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">menuentry &amp;#34;Windows 10 Installer&amp;#34; {&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">search --set&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">root --file /boot.cfg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> chainloader /efi/boot/bootx64.efi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="windows-pe">Windows PE&lt;/h3>
&lt;p>Alternatively, I can directly boot from a small WinPE image and use &lt;code>dism&lt;/code> command to extract &lt;code>install.wim&lt;/code> to the target without accepting the annoying Windows partition scheme (You know what I&amp;rsquo;m talking about).&lt;/p>
&lt;p>To create a PE image we need a Windows environment and a CMD window with admin privilege.&lt;/p>
&lt;p>Create a virtual disk to contain PE files. Assigned with volume letter &lt;code>P:\&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; diskpart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>c:&lt;span class="se">\w&lt;/span>inpe.vhd &lt;span class="nv">maximum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2000&lt;/span> &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>fixed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>c:&lt;span class="se">\w&lt;/span>inpe.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; attach vdisk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; convert mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create partition primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; format &lt;span class="nv">fs&lt;/span>&lt;span class="o">=&lt;/span>ntfs quick
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then mount the Windows installer ISO. Assuming the assigned volume is &lt;code>G:\&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; dism /apply-image /imagefile:g:&lt;span class="se">\s&lt;/span>ources&lt;span class="se">\b&lt;/span>oot.wim /index:1 /applydir:p:&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&amp;gt; dism /image:p:&lt;span class="se">\ &lt;/span>/set-targetpath:x:&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&amp;gt; dism /image:p:&lt;span class="se">\ &lt;/span>/set-inputlocale:en-us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; dism /image:p:&lt;span class="se">\ &lt;/span>/set-userlocale:en-us
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Assign EFI partition with volume letter &lt;code>E:\&lt;/code>.&lt;/p>
&lt;p>Before creating the bootloader for Windows PE, we need to backup our GRUB EFI file (Windows PE bootloader will overwrite it). Rename &lt;code>E:\EFI&lt;/code> to &lt;code>E:\EFI-grub&lt;/code>.&lt;/p>
&lt;p>Create Windows PE bootloader.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; bcdboot p:&lt;span class="se">\W&lt;/span>indows /l en-us /s e: /f uefi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then merge both &lt;code>E:\EFI&lt;/code> and &lt;code>E:\EFI-grub&lt;/code>. If it prompts overwriting &lt;code>E:\EFI\Boot\bootx64.efi&lt;/code>, confirm with yes.&lt;/p>
&lt;p>Then add following content to &lt;code>(data)/boot.cfg&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">menuentry &amp;#34;Windows PE&amp;#34; {&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">search --set&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">root --file /boot.cfg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> chainloader /EFI/Microsoft/Boot/bootmgfw.efi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="loading-any-iso">Loading Any ISO&lt;/h3>
&lt;p>Some ISO is capable to be loaded directly into memory. The size of the ISO file is critical. Generally it should not exceed the physical memory. This can be done by &lt;code>memdisk&lt;/code> from &lt;code>syslinux&lt;/code>.&lt;/p>
&lt;p>Copy the &lt;code>memdisk&lt;/code> into the EFI partition.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo cp /usr/lib/syslinux/bios/memdisk &lt;span class="o">(&lt;/span>esp&lt;span class="o">)&lt;/span>/memdisk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then put the following content to &lt;code>(data)/boot.cfg&lt;/code>. For example, loading a Windows PE ISO.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">menuentry &amp;#34;Windows PE ISO&amp;#34; {&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">search --set&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">root --file /boot.cfg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> linux16 memdisk iso ro
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> initrd16 /images/winpe.iso&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="the-end">The End&lt;/h2>
&lt;p>Finally I&amp;rsquo;m very satisfied with this new USB drive. Yay!&lt;/p></description></item><item><title>Moving From Vim to Emacs</title><link>https://peromage.github.io/p/moving-from-vim-to-emacs/</link><pubDate>Sat, 14 Aug 2021 10:29:00 +0000</pubDate><guid>https://peromage.github.io/p/moving-from-vim-to-emacs/</guid><description>&lt;p>YouTube has been pushing me a lot Emacs related contents. This is weird since mostly I watch Vim videos only. But probably this is also a great opportunity to try Emacs again.&lt;/p>
&lt;p>I have tried Emacs half year ago. I looked a lot Elisp programming fundamentals and tried a few Emacs configurations from others including Doom Emacs. However, it didn&amp;rsquo;t last long since I found that I didn&amp;rsquo;t have enough time to configure this Emacs setup as good as the &lt;a class="link" href="https://github.com/peromage/rice.vim" target="_blank" rel="noopener"
>Vim setup&lt;/a> that I was using. Also using other&amp;rsquo;s configurations makes things complicated for me. They have too many packages included and I don&amp;rsquo;t know what they are.&lt;/p>
&lt;p>After watching a bunch of Emacs videos I decided to pick it up this time, with vanilla Emacs starting from scratch. The reason why I make my mind this time is because I found Emacs can perfectly and elegantly solve some problems that pain my ass:&lt;/p>
&lt;ul>
&lt;li>More convenient package management.&lt;/li>
&lt;li>High quality packages.&lt;/li>
&lt;li>Easier file management in shell environment within the editor (Dired)&lt;/li>
&lt;li>No third party dependencies like Node.js and Python. The two major plugs that I&amp;rsquo;m using in Vim are &lt;a class="link" href="https://github.com/neoclide/coc.nvim" target="_blank" rel="noopener"
>Coc&lt;/a> and &lt;a class="link" href="https://github.com/Yggdroot/LeaderF" target="_blank" rel="noopener"
>Leaderf&lt;/a>. They require Node.js and Python to work. Since Elisp is power enough, Emacs can handle this easily by itself.&lt;/li>
&lt;li>Server-client architecture. I can even replace Tmux with Emacs now. NeoVim has the similar concept but it cannot match what Emacs has.&lt;/li>
&lt;li>Graphical interface in X mode. This makes Emacs be able to display rich contents.&lt;/li>
&lt;li>Org mode. It looks great to organize todo list and take notes without switching to other applications.&lt;/li>
&lt;li>Evil mode. No need to worry about missing Vim&amp;rsquo;s features.&lt;/li>
&lt;li>Magit. Looks way better and nicer than fugitive.&lt;/li>
&lt;li>Elisp. Elisp is fun 😉.&lt;/li>
&lt;/ul>
&lt;p>The migration is going slowly. Right now my main setup is still Vim + Tmux. There is a little curve learning from vanilla edition of Emacs, but It&amp;rsquo;s not a big deal compared with the first time when I started learning Vim 🙂.&lt;/p>
&lt;p>In the end, dont&amp;rsquo;t give me wrong. Vim and Emacs both are great text editor. For me, Vim is more like a spirit, a concept. Once you&amp;rsquo;ve learned its high-efficiency key maps, you can use it everywhere. Even though I switch to Emacs I still use Vim mode together with Emacs&amp;rsquo; powerful extendability. Why not?&lt;/p></description></item><item><title>Dual-booting Windows VHD and Native Linux on a BIOS+GPT PC</title><link>https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/</link><pubDate>Fri, 09 Jul 2021 16:40:00 +0000</pubDate><guid>https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>Previously I wrote a post for this dual-boot scenario. It is a little outdated. In the past year I mostly worked in the Linux environment on my old laptop, so the Windows seems not to be a necessity which occupies a dedicated partition. However, sometimes it is still needed. That is why I started thinking to improve this setup even further.&lt;/p>
&lt;p>Starting from Windows 7, Windows supports boots from a VHD file which makes it so much easier to manage. Also you are able to create differencing disks which are pretty much like snapshots.&lt;/p>
&lt;p>For this new configuration, my plan is to use BIOS + GPT disk table + Native Linux + Native Windows booting from VHD + GRUB as the bootloader.&lt;/p>
&lt;h2 id="partitioning">Partitioning&lt;/h2>
&lt;p>To make GPT works with BIOS. It is required to have a small partition &lt;a class="link" href="https://wiki.archlinux.org/title/GRUB" target="_blank" rel="noopener"
>flagged&lt;/a> with &lt;code>EF02&lt;/code>.&lt;/p>
&lt;p>The partition scheme looks like this:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Device&lt;/th>
&lt;th>Start&lt;/th>
&lt;th>End&lt;/th>
&lt;th>Sectors&lt;/th>
&lt;th>Size&lt;/th>
&lt;th>Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>/dev/sda1&lt;/td>
&lt;td>34&lt;/td>
&lt;td>2047&lt;/td>
&lt;td>2014&lt;/td>
&lt;td>1007K&lt;/td>
&lt;td>BIOS Boot&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda2&lt;/td>
&lt;td>2048&lt;/td>
&lt;td>1026047&lt;/td>
&lt;td>1024000&lt;/td>
&lt;td>500M&lt;/td>
&lt;td>EFI System&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda3&lt;/td>
&lt;td>1026048&lt;/td>
&lt;td>206546943&lt;/td>
&lt;td>205520896&lt;/td>
&lt;td>98G&lt;/td>
&lt;td>Linux Filesystem&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda4&lt;/td>
&lt;td>206546944&lt;/td>
&lt;td>835692543&lt;/td>
&lt;td>629145600&lt;/td>
&lt;td>300G&lt;/td>
&lt;td>Linux Filesystem&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/dev/sda5&lt;/td>
&lt;td>835692544&lt;/td>
&lt;td>1465149134&lt;/td>
&lt;td>629456591&lt;/td>
&lt;td>300.1G&lt;/td>
&lt;td>Microsoft Basic Data&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="installing-linux">Installing Linux&lt;/h2>
&lt;p>Any Linux distro would work. I chose Manjaro KDE this time because I found that the Pop OS made my laptop really hot sometimes (Yeah KDE is prettier).&lt;/p>
&lt;p>This part should be easy. The GRUB files is going into that EFI partition. For details, check &lt;a class="link" href="https://wiki.archlinux.org/title/GRUB" target="_blank" rel="noopener"
>GRUB wiki&lt;/a>.&lt;/p>
&lt;h2 id="preparing-to-install-windows">Preparing to Install Windows&lt;/h2>
&lt;p>I&amp;rsquo;m not going to use the standard Windwos installer since I want to install it into a VHD file. To make it work we need a Windows PE environment.&lt;/p>
&lt;h3 id="preparing-images">Preparing Images&lt;/h3>
&lt;p>Any Windows PE (Windows 7 and above) would work. The PE ISO image is going to &lt;code>/boot/wepe.iso&lt;/code>.&lt;/p>
&lt;p>Also a Windows ISO image is needed. For example a Windows 7 ISO named &lt;code>windows7.iso&lt;/code> will be put in the Windows data partition.&lt;/p>
&lt;h3 id="adding-windows-pe-to-grub">Adding Windows PE to GRUB&lt;/h3>
&lt;p>Boot into Linux. Download Windows PE ISO file and move it to the EFI partition (EXT4 partitions might be problematic).&lt;/p>
&lt;p>To load this ISO image, &lt;code>memdisk&lt;/code> tool from &lt;code>syslinux&lt;/code> is required. Steps as below on Arch based distro:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Installing syslinux&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo pacman -S syslinux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copying memdisk to the boot partition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo cp /usr/lib/syslinux/bios/memdisk /boot/memdisk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Adding Windows PE entry to GRUB. 1DB1-9C31 is the boot partition&amp;#39;s UUID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;/etc/grub.d/40_custom
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">menuentry &amp;#34;WePE x64&amp;#34; {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> search --set=root --no-floppy --fs-uuid 1DB1-9C31
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> linux16 /memdisk iso ro
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> initrd16 /wepe.iso
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Updating GRUB entries&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="installing-windows-to-a-vhd-file">Installing Windows to a VHD File&lt;/h2>
&lt;p>After adding Windows PE to the bootloader entries, it is time to switch the working environment.&lt;/p>
&lt;p>Restart the PC, then keep pression &lt;code>shift&lt;/code> key until the GRUB menu shows up. Now navigate to the Windows PE entry and get in there.&lt;/p>
&lt;h3 id="creating-a-vhd-file-for-windows">Creating a VHD File for Windows&lt;/h3>
&lt;p>To create a VHD file, open a command line window and enter &lt;code>diskpart&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create a VHD file assuming the NTFS data partition is assigned with D:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>d:&lt;span class="se">\w&lt;/span>indows7.vhd &lt;span class="nv">maximum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64000&lt;/span> &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>fixed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>d:&lt;span class="se">\w&lt;/span>indows7.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; attach vdisk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Disk table type doesn&amp;#39;t matter but using MBR for better compatibility&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; convert mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create the system partition and assign it with C:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create partition primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; format &lt;span class="nv">fs&lt;/span>&lt;span class="o">=&lt;/span>ntfs quick
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now the Windows image can be dumped into this VHD file.&lt;/p>
&lt;h3 id="extracting-windows-image">Extracting Windows Image&lt;/h3>
&lt;p>Mount the Windows ISO image to &lt;code>E:&lt;/code> volume and open a command line window&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Get the image index. For example the desired version&amp;#39;s index is 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; dism /get-wiminfo /wimfile&lt;span class="o">=&lt;/span>e:&lt;span class="se">\s&lt;/span>ources&lt;span class="se">\i&lt;/span>nstall.wim
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Extract the image. Where E: is the Windows ISO and C: is the VHD file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; dism /apply-image /imagefile:e:&lt;span class="se">\s&lt;/span>ources&lt;span class="se">\i&lt;/span>nstall.wim /index:1 /applydir:c:&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="fixing-the-windows-bootloader">Fixing the Windows Bootloader&lt;/h2>
&lt;p>Stay in Windows PE. Don&amp;rsquo;t restart the PC. We still need to fix the bootloader for Windows.&lt;/p>
&lt;p>Normally Windows cannot be booted with a GPT+MBR setup. And also loading the whole Windows VHD file through &lt;code>memdisk&lt;/code> is not possible because it&amp;rsquo;s too large to load into memory. To fix the boot issue a bridge is needed between Windows and GRUB.&lt;/p>
&lt;p>Luckily &lt;a class="link" href="http://reboot.pro/index.php?showtopic=19516&amp;amp;page=2&amp;amp;#entry184489" target="_blank" rel="noopener"
>a small VHD image&lt;/a> can still be loaded by &lt;code>memdisk&lt;/code>.&lt;/p>
&lt;p>The idea is: GRUB -&amp;gt; MS Bootmgr VHD -&amp;gt; Windows VHD&lt;/p>
&lt;h3 id="creating-a-dedicated-bootloader-image-for-windows">Creating a Dedicated Bootloader Image for Windows&lt;/h3>
&lt;p>It is same with the process creating a VHD file for Windows system but this time it is a smaller file (32 MB).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create a small bootmgr VHD file in the data partition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>d:&lt;span class="se">\b&lt;/span>ootmgr.vhd &lt;span class="nv">maximum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">32&lt;/span> &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>fixed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>d:&lt;span class="se">\b&lt;/span>ootmgr.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; attach vdisk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; convert mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; create partition primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; format &lt;span class="nv">fs&lt;/span>&lt;span class="o">=&lt;/span>ntfs quick
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now the &lt;code>bootmgr&lt;/code> VHD is mounted at &lt;code>F:&lt;/code>. Then write the boot record and create boot configuration files.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; bootsect /nt60 f: /mbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; bcdboot c:&lt;span class="se">\W&lt;/span>indows /l en-us /s f: /f bios
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="fixing-the-bcd-entry">Fixing the BCD Entry&lt;/h3>
&lt;p>At this point it should be working according to the &lt;a class="link" href="https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/boot-to-vhd--native-boot--add-a-virtual-hard-disk-to-the-boot-menu" target="_blank" rel="noopener"
>Microsoft&amp;rsquo;s document&lt;/a>. In fact it is not.&lt;/p>
&lt;p>Let&amp;rsquo;s check the BCD entries, in a command window:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; bcdedit /store f:&lt;span class="se">\B&lt;/span>oot&lt;span class="se">\B&lt;/span>CD /enum
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows Boot Manager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">identifier &lt;span class="o">{&lt;/span>bootmgr&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">device &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>F:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description Windows Boot Manager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">locale en-us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">inherit &lt;span class="o">{&lt;/span>globalsettings&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resumeobject &lt;span class="o">{&lt;/span>fcd67427-e033-11eb-8826-cdf90e3873d0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">displayorder &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toolsdisplayorder &lt;span class="o">{&lt;/span>memdiag&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">timeout &lt;span class="m">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows Boot Loader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">identifier &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">device &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>C:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">path &lt;span class="se">\W&lt;/span>indows&lt;span class="se">\s&lt;/span>ystem32&lt;span class="se">\w&lt;/span>inload.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description Windows &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">locale en-us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">inherit &lt;span class="o">{&lt;/span>bootloadersettings&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">osdevice &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>C:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemroot &lt;span class="se">\W&lt;/span>indows
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resumeobject &lt;span class="o">{&lt;/span>fcd67427-e033-11eb-8826-cdf90e3873d0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nx OptIn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">detecthal Yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The &lt;code>device&lt;/code> and &lt;code>osdevice&lt;/code> seems to be right but once the Windows VHD is unmounted it becomes &lt;code>unknown&lt;/code>. According to this &lt;a class="link" href="http://www.mistyprojects.co.uk/documents/BCDEdit/files/device.htm" target="_blank" rel="noopener"
>BCDEdit notes&lt;/a>, BCD entry records the partition&amp;rsquo;s information such as UUID to find the correct partition during bootup. In this case the partition can&amp;rsquo;t be found until the VHD file is mounted. But this VHD file is not mounted automatically.&lt;/p>
&lt;p>Thus we need to correct this and let &lt;code>Bootmgr&lt;/code> locate the VHD file properly.&lt;/p>
&lt;p>In a command line window:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The identifier must match the one which is showing above&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; bcdedit /store C:&lt;span class="se">\B&lt;/span>oot&lt;span class="se">\B&lt;/span>CD /set &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span> device &lt;span class="nv">vhd&lt;/span>&lt;span class="o">=[&lt;/span>D:&lt;span class="o">]&lt;/span>&lt;span class="se">\w&lt;/span>indows7.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; bcdedit /store C:&lt;span class="se">\B&lt;/span>oot&lt;span class="se">\B&lt;/span>CD /set &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span> osdevice &lt;span class="nv">vhd&lt;/span>&lt;span class="o">=[&lt;/span>D:&lt;span class="o">]&lt;/span>&lt;span class="se">\w&lt;/span>indows7.vhd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If we check the BCD entry again it doesn&amp;rsquo;t change. But if we unmount the Windows VHD it will become:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; bcdedit /store f:&lt;span class="se">\B&lt;/span>oot&lt;span class="se">\B&lt;/span>CD /enum
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows Boot Manager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">identifier &lt;span class="o">{&lt;/span>bootmgr&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">device &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>E:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description Windows Boot Manager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">locale en-us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">inherit &lt;span class="o">{&lt;/span>globalsettings&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resumeobject &lt;span class="o">{&lt;/span>fcd67427-e033-11eb-8826-cdf90e3873d0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">displayorder &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toolsdisplayorder &lt;span class="o">{&lt;/span>memdiag&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">timeout &lt;span class="m">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows Boot Loader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">identifier &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">device &lt;span class="nv">vhd&lt;/span>&lt;span class="o">=[&lt;/span>C:&lt;span class="o">]&lt;/span>&lt;span class="se">\w&lt;/span>indows7.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">path &lt;span class="se">\W&lt;/span>indows&lt;span class="se">\s&lt;/span>ystem32&lt;span class="se">\w&lt;/span>inload.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description Windows &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">locale en-us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">inherit &lt;span class="o">{&lt;/span>bootloadersettings&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">osdevice &lt;span class="nv">vhd&lt;/span>&lt;span class="o">=[&lt;/span>C:&lt;span class="o">]&lt;/span>&lt;span class="se">\w&lt;/span>indows7.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemroot &lt;span class="se">\W&lt;/span>indows
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resumeobject &lt;span class="o">{&lt;/span>fcd67427-e033-11eb-8826-cdf90e3873d0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nx OptIn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">detecthal Yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The volume letter doesn&amp;rsquo;t matter, it changes dynamically. Now &lt;code>bootmgr&lt;/code> is able to locate the VHD file correctly.&lt;/p>
&lt;h2 id="adding-windows-to-grub">Adding Windows to GRUB&lt;/h2>
&lt;p>Restart PC and get into Linux.&lt;/p>
&lt;p>Modify the GRUB config file to load &lt;code>bootmgr&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Adding Windows (bootmgr) entry to GRUB. 1DB1-9C31 is the boot partition&amp;#39;s UUID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;/etc/grub.d/40_custom
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">menuentry &amp;#34;Windows 7&amp;#34; {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> search --set=root --no-floppy --fs-uuid 1DB1-9C31
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> linux16 /memdisk harddisk
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> initrd16 /bootmgr.vhd
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Updating GRUB entries&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now we can restart PC. Keep pressing &lt;code>shift&lt;/code> on bootup to go to the GRUB menu. Select Windows entry to boot Windows.&lt;/p>
&lt;h2 id="fixing-windows-initialization-error">Fixing Windows Initialization Error&lt;/h2>
&lt;p>During the first time bootup, Windows might have an error showing&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Windows could not complete the installation. To install Windows on this computer, restart the installation.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To &lt;a class="link" href="https://www.howisolve.com/windows-could-not-complete-the-installation-solved/" target="_blank" rel="noopener"
>solve&lt;/a> this error:&lt;/p>
&lt;ol>
&lt;li>Press &lt;code>SHIFT + F10&lt;/code> to bring up the command prompt.&lt;/li>
&lt;li>Execute &lt;code>C:\windows\system32\oobe\msoobe&lt;/code>.&lt;/li>
&lt;li>Wait for a while and the setup window will show up.&lt;/li>
&lt;li>Complete the setup and restart.&lt;/li>
&lt;/ol>
&lt;h2 id="creating-a-differencing-disk">Creating a Differencing Disk&lt;/h2>
&lt;p>A differencing disk can be used for quick recoveries.&lt;/p>
&lt;p>To create it, restart into the Windows PE environment. In a command line window:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Use the original VHD as base&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; move d:&lt;span class="se">\w&lt;/span>indows7.vhd d:&lt;span class="se">\w&lt;/span>indows7_base.vhd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create a differencing disk based on the original one&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The name of the new differencing disk has to be the name that was recorded in the BCD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; diskpart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DISKPART&amp;gt; creat vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>d:&lt;span class="se">\w&lt;/span>indows7.vhd &lt;span class="nv">parent&lt;/span>&lt;span class="o">=&lt;/span>d:&lt;span class="se">\w&lt;/span>indows7_base.vhd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then all changes made in the future will go into the differencing disk. If system goes wrong one day, simply deleting the the differencing disk and creating a new one would quickly recover from the crysis.&lt;/p>
&lt;p>&lt;strong>NOTE: After creating the differencing disk, the base VHD is not supposed to be modified.&lt;/strong>&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;p>&lt;a class="link" href="https://wiki.archlinux.org/title/GRUB" target="_blank" rel="noopener"
>GRUB wiki&lt;/a>
&lt;a class="link" href="https://wzyboy.im/post/1049.html" target="_blank" rel="noopener"
>BIOS + GPT + GRUB + Linux + Windows 折腾笔记&lt;/a>
&lt;a class="link" href="https://rimo.site/2017/02/08/install-win7-into-vhd/" target="_blank" rel="noopener"
>在 VHD 中安装 Windows 7&lt;/a>
&lt;a class="link" href="http://reboot.pro/index.php?showtopic=19516&amp;amp;page=2&amp;amp;#entry184489" target="_blank" rel="noopener"
>Hack Bootmgr to boot Windows in BIOS to GPT&lt;/a>
&lt;a class="link" href="https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/boot-to-vhd--native-boot--add-a-virtual-hard-disk-to-the-boot-menu" target="_blank" rel="noopener"
>Boot to a virtual hard disk: Add a VHDX or VHD to the boot menu&lt;/a>
&lt;a class="link" href="http://www.mistyprojects.co.uk/documents/BCDEdit/files/device.htm" target="_blank" rel="noopener"
>BCDEdit notes&lt;/a>
&lt;a class="link" href="https://www.howisolve.com/windows-could-not-complete-the-installation-solved/" target="_blank" rel="noopener"
>100% Solved:Windows could not complete the installation&lt;/a>&lt;/p></description></item></channel></rss>