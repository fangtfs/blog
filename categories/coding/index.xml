<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coding on undefined behavior</title><link>https://peromage.github.io/categories/coding/</link><description>Recent content in coding on undefined behavior</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Nov 2023 15:44:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/categories/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Perl Quick Reference</title><link>https://peromage.github.io/p/perl-quick-reference/</link><pubDate>Mon, 13 Nov 2023 15:44:00 +0000</pubDate><guid>https://peromage.github.io/p/perl-quick-reference/</guid><description>Preface Perl is a powerful tool to handle text processing. However, the learning curve might be steep due to some unusual syntax. I find myself even need to revisit the doc sometimes if I don&amp;rsquo;t use it often, so this post I&amp;rsquo;ll write down some commonly used patterns when it comes to text processing. That said this post is updated from time to time so remember to come back!
When used as a command line tool, perl is powerful enough to replace traditional text processing tools like sed, awk, grep, tr etc.</description></item><item><title>LSP Setup for Java</title><link>https://peromage.github.io/p/lsp-setup-for-java/</link><pubDate>Sat, 18 Feb 2023 17:04:00 +0000</pubDate><guid>https://peromage.github.io/p/lsp-setup-for-java/</guid><description>Update on &amp;lt;2023-06-07 Wed&amp;gt; Found a much easier way to configure this and tried again with the update-to-date lsp-java and it worked magically. Can&amp;rsquo;t recall why I had configuration issues before.
Simply it would be:
Make sure JDK 17 is installed (According to the requirement of lsp-java). Create a lib folder and put .jar files into it (or symlinks). See this issue. Run lsp-restart-workspace. Voila! Now LSP works as you would expect :).</description></item><item><title>Use Git Worktree to Work with Multiple Checkout at the Same Time</title><link>https://peromage.github.io/p/use-git-worktree-to-work-with-multiple-checkout-at-the-same-time/</link><pubDate>Mon, 06 Jun 2022 00:30:00 +0000</pubDate><guid>https://peromage.github.io/p/use-git-worktree-to-work-with-multiple-checkout-at-the-same-time/</guid><description>Troubles When working with a complicated project where you have to compare different history versions side by side, it soon becomes frustrating frequently checking out refs.
The old stupid way is to clone multiple repos and checkout to the specific revisions. When the project is big this might be a trouble because you&amp;rsquo;re basically duplicating files.
Savior Git provides a convenience sub-command worktree to checkout a specific ref in another directory without duplicating files.</description></item><item><title>Initialize std::array at Compile Time</title><link>https://peromage.github.io/p/initialize-stdarray-at-compile-time/</link><pubDate>Wed, 16 Mar 2022 10:25:00 +0000</pubDate><guid>https://peromage.github.io/p/initialize-stdarray-at-compile-time/</guid><description>Background I&amp;rsquo;ve been working on optimization for some C++ code recently. One of the part is to initialize some data at compile time. Consider we have a C style enum definition:
typedef enum Foo { AAA = 0, BBB, CCC } Foo_t; We want to have an array of the enum with undefined initial values 999 because by default initialization the values would be 0&amp;rsquo;s. However, std::array can only be initialized by initializer list, which is said:</description></item></channel></rss>