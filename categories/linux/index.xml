<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on undefined behavior</title><link>https://peromage.github.io/categories/linux/</link><description>Recent content in Linux on undefined behavior</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 Mar 2024 19:19:07 +0000</lastBuildDate><atom:link href="https://peromage.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup Windows To Go in a Virtual Disk</title><link>https://peromage.github.io/p/setup-windows-to-go-in-a-virtual-disk/</link><pubDate>Wed, 13 Mar 2024 15:18:00 +0000</pubDate><guid>https://peromage.github.io/p/setup-windows-to-go-in-a-virtual-disk/</guid><description>Ramble It looks like I had a lot stories about this Windows boot setup. I figure this post would be the last one I write about it since this is the most commonly used case I have so far.
So I got a Steam Deck last year. It&amp;rsquo;s pretty handy to use it as a mini PC in case I don&amp;rsquo;t have one in hands. However, there are still things exclusive on Windows but I don&amp;rsquo;t want to mess up with the internal SSD to dual-boot just for this temporary need.</description></item><item><title>Moving from Arch Linux to NixOS</title><link>https://peromage.github.io/p/moving-from-arch-linux-to-nixos/</link><pubDate>Sun, 29 Oct 2023 15:07:00 +0000</pubDate><guid>https://peromage.github.io/p/moving-from-arch-linux-to-nixos/</guid><description>I&amp;rsquo;ve been learning Nix for a while and using the Nix package manager on my work desktop that runs Ubuntu. However, I did not use the NixOS on my personal laptop because I thought I might put a lot effort after work to set it up, which I didn&amp;rsquo;t really want to. Until recent, the Arch dependencies broke again and I felt it kinda suck to fix those issues so I decided to give Nix a try.</description></item><item><title>[Archive] Multiboot USB</title><link>https://peromage.github.io/p/archive-multiboot-usb/</link><pubDate>Sun, 27 Aug 2023 17:55:00 +0000</pubDate><guid>https://peromage.github.io/p/archive-multiboot-usb/</guid><description>Boot from any ISO file Hybrid UEFI GPT + BIOS MBR/GPT boot Preparation Create 3 partitions on a removable USB stick. A BIOS boot partition (gdisk type code EF02, or GUID 21686148-6449-6E6F-744E-656564454649) with no filesystem. This partition can be put in any place on the disk but it is recommended to put it at the begginning from sector 34 to 2047. At minimal 1 MiB. An EFI System partition (gdisk</description></item><item><title>Arch Linux on Laptop</title><link>https://peromage.github.io/p/arch-linux-on-laptop/</link><pubDate>Tue, 08 Nov 2022 22:45:00 +0000</pubDate><guid>https://peromage.github.io/p/arch-linux-on-laptop/</guid><description>I recently got my new laptop and I found that some additional tweaks need to be made for laptops. Thus, this post is to have a record in case I forget when I have to reinstall the system.
Some basic setup Unlike desktop, laptops have to be secure so encrytion is a must.
Details of how-to can be found on Arch wiki. I&amp;rsquo;m not going to go through that here. However, I&amp;rsquo;ll note down some considerations and things that need to pay attention to.</description></item><item><title>VNC Quick Guide</title><link>https://peromage.github.io/p/vnc-quick-guide/</link><pubDate>Wed, 15 Jun 2022 17:40:00 +0000</pubDate><guid>https://peromage.github.io/p/vnc-quick-guide/</guid><description>I found that every time when I try to setup VNC for remote access I always have troubles so this post serves as a note for myself.
Be aware VNC only works for X (not sure about Wayland).
Choose a VNC Server Generally I use TigerVNC. It&amp;rsquo;s a fork of TightVNC with good performance and easy configuration.
It has two types of installations:
Standalone: It creates a new X server when the client is connected.</description></item><item><title>My Common Windows VM Setup</title><link>https://peromage.github.io/p/my-common-windows-vm-setup/</link><pubDate>Sun, 13 Mar 2022 17:47:00 +0000</pubDate><guid>https://peromage.github.io/p/my-common-windows-vm-setup/</guid><description>Before Starting This post mainly discusses VM setup for Windows since I&amp;rsquo;ve been using Windows as a secondary OS for apps or games that cannot run on Linux.
This post discusses setup on Arch Linux.
This post assumes the CPU and motherboard support VT-d and IOMMU features. Detailed prerequisites can be found on this page.
Install Hypervisor Follow Arch wiki to install and setup:
QEMU Libvirt Virt-Manager OVMF Install Windows VM Before Installation Download the latest Windows 10 ISO from Microsoft.</description></item><item><title>Shadowsocks Quick Setup</title><link>https://peromage.github.io/p/shadowsocks-quick-setup/</link><pubDate>Sun, 13 Mar 2022 00:03:00 +0000</pubDate><guid>https://peromage.github.io/p/shadowsocks-quick-setup/</guid><description>This note is written for my personal convenience.
Server Setup Installation Use system package manager to install shadowsocks-libev. In this case, for Arch Linux it is pacman.
There is also a Python package which can be installed by pip but it seems not to be maintained for a long time.
$ sudo pacman -S shadowsocks-libev Shadowsocks Server Configuration Config file is located at /etc/shadowsocks/myserver.json. On FreeBSD it is /usr/local/etc/shadowsocks/myserver.json
The file name can vary.</description></item><item><title>SSH Over GPG Agent</title><link>https://peromage.github.io/p/ssh-over-gpg-agent/</link><pubDate>Sun, 13 Mar 2022 00:02:00 +0000</pubDate><guid>https://peromage.github.io/p/ssh-over-gpg-agent/</guid><description>This is a quick note of gpg-agent setup for SSH.
Quick Setup Import your GPG authentication key. Enable SSH support for gpg-agent. $ echo enable-ssh-support &amp;gt;&amp;gt; $HOME/.gnupg/gpg-agent.conf Get the authentication keygrip. $ gpg -k --with-keygrip Add the authentication key to the keychain (replace KEYGRIP with the value obtained from the previous step) $ echo KEYGRIP &amp;gt;&amp;gt; $HOME/.gnupg/sshcontrol Add the following init code to .bashrc unset SSH_AGENT_PID export SSH_AUTH_SOCK=&amp;#34;$(gpgconf --list-dirs agent-ssh-socket)&amp;#34; export GPG_TTY=&amp;#34;$(tty)&amp;#34; gpg-connect-agent updatestartuptty /bye &amp;gt; /dev/null Kill any running ssh-agent and gpg-agent, and then open a new Bash session.</description></item><item><title>Minimalist's Multi-boot USB Drive</title><link>https://peromage.github.io/p/minimalists-multi-boot-usb-drive/</link><pubDate>Wed, 26 Jan 2022 20:34:00 +0000</pubDate><guid>https://peromage.github.io/p/minimalists-multi-boot-usb-drive/</guid><description>Story Recently I&amp;rsquo;ve realized a fact that I always have needs to keep a multi-boot USB in my pocket for either Linux or Windows installation. There are a lot tools out there already but I don&amp;rsquo;t really like them. At least, I mean, they are too flashy to me. A beautiful boot menu seems not to be attractive. What I need is just a simple and practical maybe a little ugly boot device.</description></item><item><title>Dual-booting Windows VHD and Native Linux on a BIOS+GPT PC</title><link>https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/</link><pubDate>Fri, 09 Jul 2021 16:40:00 +0000</pubDate><guid>https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/</guid><description>Background Previously I wrote a post for this dual-boot scenario. It is a little outdated. In the past year I mostly worked in the Linux environment on my old laptop, so the Windows seems not to be a necessity which occupies a dedicated partition. However, sometimes it is still needed. That is why I started thinking to improve this setup even further. Starting from Windows 7, Windows supports boots from</description></item><item><title>Windows+Linux双系统引导手记</title><link>https://peromage.github.io/p/windows-linux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%BC%95%E5%AF%BC%E6%89%8B%E8%AE%B0/</link><pubDate>Wed, 05 Apr 2017 19:26:00 +0000</pubDate><guid>https://peromage.github.io/p/windows-linux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%BC%95%E5%AF%BC%E6%89%8B%E8%AE%B0/</guid><description>0x00 情况简述 由于开发需要 Linux 环境，所以将老的那台笔记本改造成了双系统。 这台电脑的基本情况是这样的，64GB 固态硬盘 + 720GB 机械硬盘（实际可用空间有折</description></item></channel></rss>