<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on undefined behavior</title><link>https://peromage.github.io/categories/linux/</link><description>Recent content in linux on undefined behavior</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Nov 2022 21:29:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Moving from Arch Linux to NixOS</title><link>https://peromage.github.io/p/moving-from-arch-linux-to-nixos/</link><pubDate>Mon, 14 Nov 2022 21:29:00 +0000</pubDate><guid>https://peromage.github.io/p/moving-from-arch-linux-to-nixos/</guid><description>I&amp;rsquo;ve been learning Nix for a while and using the Nix package manager on my work desktop that runs Ubuntu. However, I did not use the NixOS on my personal laptop because I thought I might put a lot effort after work to set it up, which I didn&amp;rsquo;t really want to. Until recent, the Arch dependencies broke again and I felt it kinda suck to fix those issues so I decided to give Nix a try.</description></item><item><title>Arch Linux on Laptop</title><link>https://peromage.github.io/p/arch-linux-on-laptop/</link><pubDate>Tue, 08 Nov 2022 22:45:00 +0000</pubDate><guid>https://peromage.github.io/p/arch-linux-on-laptop/</guid><description>I recently got my new laptop and I found that some additional tweaks need to be made for laptops. Thus, this post is to have a record in case I forget when I have to reinstall the system.
Some basic setup Unlike desktop, laptops have to be secure so encrytion is a must.
Details of how-to can be found on Arch wiki. I&amp;rsquo;m not going to go through that here. However, I&amp;rsquo;ll note down some considerations and things that need to pay attention to.</description></item><item><title>VNC Quick Guide</title><link>https://peromage.github.io/p/vnc-quick-guide/</link><pubDate>Wed, 15 Jun 2022 17:40:00 +0000</pubDate><guid>https://peromage.github.io/p/vnc-quick-guide/</guid><description>I found that every time when I try to setup VNC for remote access I always have troubles so this post serves as a note for myself.
Be aware VNC only works for X (not sure about Wayland).
Choose a VNC Server Generally I use TigerVNC. It&amp;rsquo;s a fork of TightVNC with good performance and easy configuration.
It has two types of installations:
Standalone: It creates a new X server when the client is connected.</description></item><item><title>My Common Windows VM Setup</title><link>https://peromage.github.io/p/my-common-windows-vm-setup/</link><pubDate>Sun, 13 Mar 2022 17:47:00 +0000</pubDate><guid>https://peromage.github.io/p/my-common-windows-vm-setup/</guid><description>Before Starting This post mainly discusses VM setup for Windows since I&amp;rsquo;ve been using Windows as a secondary OS for apps or games that cannot run on Linux.
This post discusses setup on Arch Linux.
This post assumes the CPU and motherboard support VT-d and IOMMU features. Detailed prerequisites can be found on this page.
Install Hypervisor Follow Arch wiki to install and setup:
QEMU Libvirt Virt-Manager OVMF Install Windows VM Before Installation Download the latest Windows 10 ISO from Microsoft.</description></item><item><title>Shadowsocks Quick Setup</title><link>https://peromage.github.io/p/shadowsocks-quick-setup/</link><pubDate>Sun, 13 Mar 2022 00:03:00 +0000</pubDate><guid>https://peromage.github.io/p/shadowsocks-quick-setup/</guid><description>This note is written for my personal convenience.
Server Setup Installation Use system package manager to install shadowsocks-libev. In this case, for Arch Linux it is pacman.
There is also a Python package which can be installed by pip but it seems not to be maintained for a long time.
$ sudo pacman -S shadowsocks-libev Shadowsocks Server Configuration Config file is located at /etc/shadowsocks/myserver.json. On FreeBSD it is /usr/local/etc/shadowsocks/myserver.json
The file name can vary.</description></item><item><title>SSH Over GPG Agent</title><link>https://peromage.github.io/p/ssh-over-gpg-agent/</link><pubDate>Sun, 13 Mar 2022 00:02:00 +0000</pubDate><guid>https://peromage.github.io/p/ssh-over-gpg-agent/</guid><description>This is a quick note of gpg-agent setup for SSH.
Quick Setup Import your GPG authentication key. Enable SSH support for gpg-agent. $ echo enable-ssh-support &amp;gt;&amp;gt; $HOME/.gnupg/gpg-agent.conf Get the authentication keygrip. $ gpg -k --with-keygrip Add the authentication key to the keychain (replace KEYGRIP with the value obtained from the previous step) $ echo KEYGRIP &amp;gt;&amp;gt; $HOME/.gnupg/sshcontrol Add the following init code to .bashrc unset SSH_AGENT_PID export SSH_AUTH_SOCK=&amp;#34;$(gpgconf --list-dirs agent-ssh-socket)&amp;#34; export GPG_TTY=&amp;#34;$(tty)&amp;#34; gpg-connect-agent updatestartuptty /bye &amp;gt; /dev/null Kill any running ssh-agent and gpg-agent, and then open a new Bash session.</description></item></channel></rss>