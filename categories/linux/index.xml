<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Fang's Blog</title><link>https://peromage.github.io/categories/linux/</link><description>Recent content in linux on Fang's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 08 Nov 2022 22:45:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Arch Linux on Laptop</title><link>https://peromage.github.io/p/arch-linux-on-laptop/</link><pubDate>Tue, 08 Nov 2022 22:45:00 +0000</pubDate><guid>https://peromage.github.io/p/arch-linux-on-laptop/</guid><description>&lt;p>I recently got my new laptop and I found that some additional tweaks need to be made for laptops. Thus, this post is to have a record in case I forget when I have to reinstall the system.&lt;/p>
&lt;h2 id="installing-arch-linux">Installing Arch Linux&lt;/h2>
&lt;p>I have a script to handle this: &lt;a class="link" href="https://github.com/peromage/pew/blob/master/rice/scripts/setup/arch-install.sh" target="_blank" rel="noopener"
>https://github.com/peromage/pew/blob/master/rice/scripts/setup/arch-install.sh&lt;/a>&lt;/p>
&lt;h2 id="laptop-disk-partitioning-and-encryption">Laptop Disk Partitioning and Encryption&lt;/h2>
&lt;p>Unlike desktop, laptops have to be secure so encrytion is a must.&lt;/p>
&lt;p>Details of how-to can be found on Arch wiki. I&amp;rsquo;m not going to go through that here. However, I&amp;rsquo;ll note down some considerations and things that need to pay attention to.&lt;/p>
&lt;h3 id="partitioning">Partitioning&lt;/h3>
&lt;p>&lt;a class="link" href="https://wiki.archlinux.org/title/Btrfs" target="_blank" rel="noopener"
>Arch wiki about BTRFS&lt;/a>&lt;/p>
&lt;p>Using too many partitions is not good for SSD so I only have two partitions on the disk: EFI partition (also as boot) + a big partition formated with &lt;code>BTRFS&lt;/code>. The second partition is encrypted, which will be demonstrated in the next topic.&lt;/p>
&lt;p>With &lt;code>BTRFS&lt;/code>, I can use subvolume to achieve the similar effect like what partition does, but it is more flexible.&lt;/p>
&lt;p>These subvolumes are created under the big &lt;code>BTRFS&lt;/code>&amp;rsquo;s root.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Subvolume&lt;/th>
&lt;th>Mount Point&lt;/th>
&lt;th>Note&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>@arch-root&lt;/td>
&lt;td>/&lt;/td>
&lt;td>System root&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@arch-var&lt;/td>
&lt;td>/var&lt;/td>
&lt;td>Avoid getting snapshot&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@home&lt;/td>
&lt;td>/home&lt;/td>
&lt;td>Separated home&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@swap&lt;/td>
&lt;td>/.swap&lt;/td>
&lt;td>Swap files (no compression, no CoW)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@snapshot&lt;/td>
&lt;td>/.snapshot&lt;/td>
&lt;td>Snapshots&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>An example of how &lt;code>fstab&lt;/code> is set up.&lt;/p>
&lt;p>Be aware that swap subvolume should NOT be mounted with compression on.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;file system&amp;gt; &amp;lt;dir&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 / btrfs rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@arch-root 0 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/nvme0n1p1 LABEL=EFI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1569-822D /boot vfat rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 /home btrfs rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@home 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 /var btrfs rw,noatime,compress=zstd:3,ssd,space_cache=v2,subvol=/@arch-var 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /dev/mapper/myroot LABEL=FFROOT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">dcc33411-f4ae-46e0-ba7a-f285301b25f6 /.swap btrfs rw,noatime,ssd,space_cache=v2,subvol=/@swap 0 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Swap files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">/.swap/swap-32gb.img none swap defaults 0 0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="encryption">Encryption&lt;/h3>
&lt;p>&lt;a class="link" href="https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system" target="_blank" rel="noopener"
>Arch wiki about encryption&lt;/a>&lt;/p>
&lt;p>Use &lt;code>LUKS2&lt;/code>. The latest &lt;code>GRUB2&lt;/code> has integrated the support for this new algorithm. Why not using it?&lt;/p>
&lt;p>As for the scheme, I leave EFI partition unencrypted and encrypt the whole &lt;code>BTRFS&lt;/code> partition. EFI partition also acts as boot partition (ramfs and kernel reside).&lt;/p>
&lt;p>The reason that I don&amp;rsquo;t put boot partition encrypted is that I have to decrypt twice on startup: once by &lt;code>GRUB&lt;/code> and the other one by kernel. Though there is a way to &lt;a class="link" href="https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system#Avoiding_having_to_enter_the_passphrase_twice" target="_blank" rel="noopener"
>setup a key file&lt;/a> to avoid that, I still prefer typing password (Maybe TPM can be used).&lt;/p>
&lt;p>To tell kernel to decrypt the disk on startup, ramfs and kernel parameters have to be updated.&lt;/p>
&lt;p>Kernel parameters. The UUID has to be the UUID of the partition itself (not unencrypted BTRFS partition).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;cryptdevice=UUID=51d2be03-b9a4-4d4d-bc5a-0a9dba854c1f:ffroot root=/dev/mapper/ffroot&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Update ramfs hooks. &lt;code>encrypt&lt;/code> needs to go after &lt;code>udev&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">HOOKS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">(base udev autodetect modconf block filesystems keyboard fsck encrypt)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="hibernation">Hibernation&lt;/h2>
&lt;p>A workaround has to be made on &lt;code>BTRFS&lt;/code> with swap files.&lt;/p>
&lt;p>First swap files should &lt;strong>NOT&lt;/strong> be set with CoW attribute.&lt;/p>
&lt;p>Follow &lt;a class="link" href="https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Hibernation_into_swap_file_on_Btrfs" target="_blank" rel="noopener"
>this wiki&lt;/a> to calculate swap file physical offset on &lt;code>BTRFS&lt;/code> partition.&lt;/p>
&lt;p>Then set kernel parameters. The UUID should be the UUID of decrypted &lt;code>BTRFS&lt;/code> partition. Differentiate from the UUID above.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;resume=UUID=dcc33411-f4ae-46e0-ba7a-f285301b25f6 resume_offset=3420784&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Update ramfs. Add &lt;code>resume&lt;/code> hook.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">HOOKS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">(base udev autodetect modconf block filesystems keyboard fsck encrypt resume)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="tlp">TLP&lt;/h2>
&lt;p>My &lt;code>TLP&lt;/code> preferences.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/tlp.d/my-power-plan.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TLP_DEFAULT_MODE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">AC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TLP_PERSISTENT_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_SCALING_GOVERNOR_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">performance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_SCALING_GOVERNOR_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">powersave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_ENERGY_PERF_POLICY_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">balance_performance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_ENERGY_PERF_POLICY_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">balance_power&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MIN_PERF_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MAX_PERF_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MIN_PERF_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_MAX_PERF_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_BOOST_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_BOOST_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_HWP_DYN_BOOST_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">CPU_HWP_DYN_BOOST_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">SCHED_POWERSAVE_ON_AC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">SCHED_POWERSAVE_ON_BAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="framework-laptop-specific">Framework Laptop Specific&lt;/h2>
&lt;p>Framework laptop needs some additional tweaks.&lt;/p>
&lt;h3 id="ambient-light-sensor">Ambient Light Sensor&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pacman -S iio-sensor-proxy&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="fingerprint">Fingerprint&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pacman -S fprintd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="bluetooth">Bluetooth&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pacman -S bluez bluez-utils&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># systemctl enable --now bluetooth&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="touchpad-two-finger-three-finger-click">Touchpad Two-finger/Three-finger Click&lt;/h3>
&lt;ol>
&lt;li>Get touchpad device id&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># xinput&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Add to .xinitrc&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># xinput set-prop &amp;lt;device&amp;gt; &amp;#39;libinput Click Method Enabled&amp;#39; 0 1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="brightness-keys">Brightness Keys&lt;/h3>
&lt;p>Add to kernel parameters:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;module_blacklist=hid_sensor_hub&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="suspend-power">Suspend Power&lt;/h3>
&lt;p>Add to kernel parameters:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mem_sleep_default=deep nvme.noacpi=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>VNC Quick Guide</title><link>https://peromage.github.io/p/vnc-quick-guide/</link><pubDate>Wed, 15 Jun 2022 17:40:00 +0000</pubDate><guid>https://peromage.github.io/p/vnc-quick-guide/</guid><description>&lt;p>I found that every time when I try to setup VNC for remote access I always have troubles configuring it. I believe this is due to some conceptions which can be easily confusing. So this post serves both notes and reminder for myself.&lt;/p>
&lt;h2 id="choose-a-vnc-server">Choose a VNC Server&lt;/h2>
&lt;p>Generally I use &lt;a class="link" href="https://tigervnc.org/" target="_blank" rel="noopener"
>TigerVNC&lt;/a>. It&amp;rsquo;s a fork of &lt;em>TightVNC&lt;/em> and the performance is pretty good. Also, it&amp;rsquo;s easy to configure. However, when it comes to installation there are two types of servers: standalone and scraping.&lt;/p>
&lt;p>The difference is:&lt;/p>
&lt;ul>
&lt;li>Standalone: It creates a new X server when the client is connected. Independent from the local X server.&lt;/li>
&lt;li>Scraping: It mirrors the local X server. Pretty much like screen sharing.&lt;/li>
&lt;/ul>
&lt;p>Usually they are shipped with individual packages. To install, for example, on Ubuntu&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo apt install tigervnc-standalone-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo apt install tigervnc-scraping-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="standalone-server">Standalone Server&lt;/h2>
&lt;p>Configuring a standalone server is fairly easy. You would only need three things: client password, server config and server startup script. They are all located under &lt;code>$HOME/.vnc/&lt;/code>.&lt;/p>
&lt;ol>
&lt;li>Create the password file.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vncpasswd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Create the server config file (&lt;code>$HOME/.vnc/config&lt;/code>). A minimal configuration is shown as following.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="na">geometry&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1366x768&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">alwaysshared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Create the server startup script (&lt;code>$HOME/.vnc/xstartup&lt;/code>). This is also a minimal configuration.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">unset&lt;/span> DBUS_SESSION_BUS_ADDRESS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vncconfig -iconic &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dbus-launch --exit-with-session /usr/bin/gnome-session --session&lt;span class="o">=&lt;/span>ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Be aware that the last line &lt;code>dbus-launch&lt;/code> is important on some distros that are shipped with default desktop environment. Without it the VNC server could not be started correctly. This is because the newly launched desktop environment tries to reuse the existing D-Bus but it&amp;rsquo;s occupied by the local X server already. &lt;code>dbus-launch&lt;/code> makes sure it runs in its own little world. See &lt;code>dbus-launch&lt;/code>&amp;rsquo;s man page for details.&lt;/p>
&lt;ol>
&lt;li>Start the server. Make sure the display port is not used by anyone else.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vncserver :1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Connect from the client. On the remote PC:&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ssh -L 5901:localhost:5901 -t user@ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The TCP port depends on the display port used to start the VNC server. The equation is like: TCP_PORT = 5900 + DISPLAY_PORT. Usually the &lt;code>:0&lt;/code> is taken by local X server.&lt;/p>
&lt;p>Use any VNC client to connect to &lt;code>localhost:5901&lt;/code>.&lt;/p>
&lt;h2 id="scraping-server">Scraping Server&lt;/h2>
&lt;p>Configuring a scraping server is slightly different from the standalone server but it&amp;rsquo;s not hard.&lt;/p>
&lt;ol>
&lt;li>Create the password file. Same with the standalone server.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vncpasswd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Start the server. This is where it&amp;rsquo;s different from the standalone one. Since it replicates the local X server it doesn&amp;rsquo;t need the configuration.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ x0vncserver -rfbauth &lt;span class="nv">$HOME&lt;/span>/.vnc/passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Don&amp;rsquo;t forget to specify the password file or you&amp;rsquo;ll not be able to connect to it.&lt;/p>
&lt;ol>
&lt;li>Connect from the client. Same with the standalone server. On the remote PC:&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ssh -L 5900:localhost:5900 -t user@ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Local X server already uses display port &lt;code>:0&lt;/code>. Then use any VNC client to connect to &lt;code>localhost:5900&lt;/code>.&lt;/p>
&lt;h2 id="synonyms-of-tigervnc">Synonyms of TigerVNC&lt;/h2>
&lt;p>I was confused by the TigerVNC since there are similar commands. It turned out they are the same.&lt;/p>
&lt;ul>
&lt;li>&lt;code>vncserver&lt;/code> -&amp;gt; &lt;code>tigervncserver&lt;/code>&lt;/li>
&lt;li>&lt;code>vncconfig&lt;/code> -&amp;gt; &lt;code>tigervncconfig&lt;/code>&lt;/li>
&lt;li>&lt;code>vncpasswd&lt;/code> -&amp;gt; &lt;code>tigervncpasswd&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Setup A Gaming VM</title><link>https://peromage.github.io/p/setup-a-gaming-vm/</link><pubDate>Sun, 13 Mar 2022 17:47:00 +0000</pubDate><guid>https://peromage.github.io/p/setup-a-gaming-vm/</guid><description>&lt;h2 id="before-starting">Before starting&lt;/h2>
&lt;p>First thing first. I&amp;rsquo;ve been rarely using Windows over years except for working and gaming. Linux community grows fast and there are a lot alternatives available. On the contrary, Windows gets crapy every year (Office 365 is still good IMO) so there is no reason to run this huge spyware all the time.&lt;/p>
&lt;p>Modern PCs are strong enough to run a VM. Besides most of PCs have both integrated and descret graphic cards. This setup is perfect for gaming VM which requires PCI passthrough.&lt;/p>
&lt;p>In this post, I&amp;rsquo;m not going to explain everything because the ArchWiki is clear enough already. This is just a quick guide for the setup.&lt;/p>
&lt;p>NOTE: Avoid Intel K series CPUs which usually don&amp;rsquo;t have integrated graphic card.&lt;/p>
&lt;h2 id="get-started">Get started&lt;/h2>
&lt;h3 id="identify-your-pc-is-qualified">Identify your PC is qualified&lt;/h3>
&lt;p>To get high graphic performance, your CPU and motherboard must support &lt;code>VT-d&lt;/code> and &lt;code>IOMMU&lt;/code> respectively.&lt;/p>
&lt;p>If not, you can stop here and choose the traditional way to dual-boot Linux and Windows.&lt;/p>
&lt;p>NOTE: you can check &lt;a class="link" href="https://wiki.archlinux.org/title/PCI_passthrough_via_OVMF" target="_blank" rel="noopener"
>PCI passthrough via OVMF&lt;/a> prerequisite section for more information.&lt;/p>
&lt;h3 id="install-qemu">Install QEMU&lt;/h3>
&lt;p>I wrote a script to handle this automatically so just run &lt;a class="link" href="https://github.com/peromage/rice/blob/master/scripts/install-qemu.sh" target="_blank" rel="noopener"
>this script&lt;/a> before hands.&lt;/p>
&lt;p>NOTE: I&amp;rsquo;m using Arch Linux.&lt;/p>
&lt;h3 id="identify-discrete-graphic-card">Identify discrete graphic card&lt;/h3>
&lt;p>In a terminal:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ lspci -nnk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">01:00.0 VGA compatible controller &lt;span class="o">[&lt;/span>0300&lt;span class="o">]&lt;/span>: NVIDIA Corporation GM204 &lt;span class="o">[&lt;/span>GeForce GTX 970&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>10de:13c2&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>rev a1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subsystem: Gigabyte Technology Co., Ltd Device &lt;span class="o">[&lt;/span>1458:367a&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel driver in use: nouveau
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel modules: nouveau
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">01:00.1 Audio device &lt;span class="o">[&lt;/span>0403&lt;span class="o">]&lt;/span>: NVIDIA Corporation GM204 High Definition Audio Controller &lt;span class="o">[&lt;/span>10de:0fbb&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>rev a1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subsystem: Gigabyte Technology Co., Ltd Device &lt;span class="o">[&lt;/span>1458:367a&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel driver in use: snd_hda_intel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel modules: snd_hda_intel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Take a note of the device IDs. In this example I have a Nvidia GTX970 graphic card along with a audio controller. They belong to the same group (domain) you have to take them all.&lt;/p>
&lt;p>In this case I got &lt;code>1458:367a&lt;/code> and &lt;code>1458:367a&lt;/code>. These are the PCI devices that will be passed through to the VM. Other PCI devices can be passed too.&lt;/p>
&lt;h3 id="modify-kernel-parameter">Modify kernel parameter&lt;/h3>
&lt;p>Then we&amp;rsquo;re going to turn IOMMU on and prevent host Linux loading PCI devices that we want to pass-through to the VM.&lt;/p>
&lt;p>The kernel parameter passing could be different depending on the bootloader you use. In this example, I use &lt;code>grub&lt;/code>.&lt;/p>
&lt;p>Open &lt;code>/etc/default/grub&lt;/code> with your favorite text editor. You have to add &lt;code>intel_iommu=on&lt;/code> to the kernel parameter along with &lt;code>vfio-pci.ids=10de:13c2,10de:0fbb&lt;/code> which contains the device IDs you got from the previous step.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cfg" data-lang="cfg">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/default/grub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Change this line&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;loglevel=3 quiet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># To&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">GRUB_CMDLINE_LINUX_DEFAULT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;loglevel=3 quiet intel_iommu=on vfio-pci.ids=10de:13c2,10de:0fbb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then update the bootloader config file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The most tricky part is done. Restart the PC now.&lt;/p>
&lt;p>NOTE: You can check &lt;code>dmesg&lt;/code> after reboot to verify IOMMU is turned on successfully.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo dmesg &lt;span class="p">|&lt;/span> grep -i -e DMAR -e IOMMU
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.000000&lt;span class="o">]&lt;/span> ACPI: DMAR 0x00000000BDCB1CB0 0000B8 &lt;span class="o">(&lt;/span>v01 INTEL BDW &lt;span class="m">00000001&lt;/span> INTL 00000001&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.000000&lt;span class="o">]&lt;/span> Intel-IOMMU: enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.028879&lt;span class="o">]&lt;/span> dmar: IOMMU 0: reg_base_addr fed90000 ver 1:0 cap c0000020660462 ecap f0101a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.028883&lt;span class="o">]&lt;/span> dmar: IOMMU 1: reg_base_addr fed91000 ver 1:0 cap d2008c20660462 ecap f010da
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.028950&lt;span class="o">]&lt;/span> IOAPIC id &lt;span class="m">8&lt;/span> under DRHD base 0xfed91000 IOMMU &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536212&lt;span class="o">]&lt;/span> DMAR: No ATSR found
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536229&lt;span class="o">]&lt;/span> IOMMU &lt;span class="m">0&lt;/span> 0xfed90000: using Queued invalidation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536230&lt;span class="o">]&lt;/span> IOMMU &lt;span class="m">1&lt;/span> 0xfed91000: using Queued invalidation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536231&lt;span class="o">]&lt;/span> IOMMU: Setting RMRR:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.536241&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:02.0 &lt;span class="o">[&lt;/span>0xbf000000 - 0xcf1fffff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537490&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:14.0 &lt;span class="o">[&lt;/span>0xbdea8000 - 0xbdeb6fff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537512&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:1a.0 &lt;span class="o">[&lt;/span>0xbdea8000 - 0xbdeb6fff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537530&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:1d.0 &lt;span class="o">[&lt;/span>0xbdea8000 - 0xbdeb6fff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537543&lt;span class="o">]&lt;/span> IOMMU: Prepare 0-16MiB unity mapping &lt;span class="k">for&lt;/span> LPC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 0.537549&lt;span class="o">]&lt;/span> IOMMU: Setting identity map &lt;span class="k">for&lt;/span> device 0000:00:1f.0 &lt;span class="o">[&lt;/span>0x0 - 0xffffff&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.182790&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>drm&lt;span class="o">]&lt;/span> DMAR active, disabling use of stolen memory
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="install-the-vm">Install the VM&lt;/h3>
&lt;p>Open virt-manager GUI and follow the guide to setup.&lt;/p>
&lt;p>Some settings should be tweaked specifically:&lt;/p>
&lt;ul>
&lt;li>Overview: Change &lt;em>Firmware&lt;/em> to &lt;code>UEFI&lt;/code>&lt;/li>
&lt;li>CPUs:
&lt;ul>
&lt;li>Change &lt;em>vCPU allocation&lt;/em> to the maximal host CPUs. In this case, it&amp;rsquo;s &lt;code>8&lt;/code>&lt;/li>
&lt;li>Unselect &lt;em>Copy host CPU configuration&lt;/em> and change &lt;em>Model&lt;/em> to &lt;code>host-passthrough&lt;/code>&lt;/li>
&lt;li>Select &lt;em>Manually set CPU topology&lt;/em>. Change &lt;em>Sockets&lt;/em> to &lt;code>1&lt;/code>, &lt;em>Cores&lt;/em> to &lt;code>4&lt;/code>, &lt;em>Threads&lt;/em> to &lt;code>2&lt;/code> (Physical core &lt;code>4&lt;/code> * threads for each core &lt;code>2&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Disk: Change &lt;em>Disk bus&lt;/em> to &lt;code>VirtIO&lt;/code>&lt;/li>
&lt;li>Display Spice: You don&amp;rsquo;t really need it so remove it&lt;/li>
&lt;li>Video: Change to None&lt;/li>
&lt;li>PCI: Add your discrete graphic card as well as anything with it (audio controller etc.)&lt;/li>
&lt;li>USB: Mouse, keyboards, game controllers etc.&lt;/li>
&lt;/ul>
&lt;p>After saving the settins, the installation should start but don&amp;rsquo;t install Windows yet. Instead, force power if off. Open VM settings in XML view, add following content to prevent Nvidia driver installer discovering the VM environment.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;features&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;hyperv&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;vendor_id&lt;/span> &lt;span class="na">state=&lt;/span>&lt;span class="s">&amp;#39;on&amp;#39;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#39;1234567890ab&amp;#39;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/hyperv&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;kvm&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;hidden&lt;/span> &lt;span class="na">state=&lt;/span>&lt;span class="s">&amp;#39;on&amp;#39;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/kvm&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/features&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alternatively, this has the same effect.&lt;/p>
&lt;p>NOTE: &lt;code>win11&lt;/code> is the VM name you&amp;rsquo;ve just created.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo virshpatcher --error43 --vender-id 1234567890ab win11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="install-virtio-drivers">Install virtio drivers&lt;/h3>
&lt;p>In the Windows VM, download the &lt;a class="link" href="https://github.com/virtio-win/virtio-win-pkg-scripts/blob/master/README.md" target="_blank" rel="noopener"
>virtio driver&lt;/a> and install it.&lt;/p>
&lt;p>NOTE: Check &lt;a class="link" href="https://wiki.archlinux.org/title/QEMU" target="_blank" rel="noopener"
>ArchWiki QEMU&lt;/a> for more info&lt;/p>
&lt;h2 id="post-installation">Post installation&lt;/h2>
&lt;p>If you don&amp;rsquo;t want to switch monitors you can try &lt;a class="link" href="https://looking-glass.io/" target="_blank" rel="noopener"
>Looking Glass&lt;/a> which allows you redirect VM display output to a emulated monitor.&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>[&lt;a class="link" href="https://github.com/peromage/rice/blob/master/scripts/install-qemu.sh" target="_blank" rel="noopener"
>QEMU install script&lt;/a>
&lt;a class="link" href="https://wiki.archlinux.org/title/QEMU" target="_blank" rel="noopener"
>ArchWiki QEMU&lt;/a>
&lt;a class="link" href="https://wiki.archlinux.org/title/PCI_passthrough_via_OVMF" target="_blank" rel="noopener"
>ArchWiki OVMF&lt;/a>
&lt;a class="link" href="https://looking-glass.io/" target="_blank" rel="noopener"
>Looking Glass&lt;/a>
&lt;a class="link" href="https://github.com/virtio-win/virtio-win-pkg-scripts/blob/master/README.md" target="_blank" rel="noopener"
>Virtio driver&lt;/a>&lt;/p></description></item><item><title>Shadowsocks Quick Setup</title><link>https://peromage.github.io/p/shadowsocks-quick-setup/</link><pubDate>Sun, 13 Mar 2022 00:03:00 +0000</pubDate><guid>https://peromage.github.io/p/shadowsocks-quick-setup/</guid><description>&lt;p>This note is written for my personal convenience.&lt;/p>
&lt;h2 id="server-setup">Server Setup&lt;/h2>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>Use system package manager to install &lt;code>shadowsocks-libev&lt;/code>. In this case, for Arch Linux it is &lt;code>pacman&lt;/code>.&lt;/p>
&lt;p>There is also a Python package which can be installed by &lt;code>pip&lt;/code> but it seems not to be maintained for a long time.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo pacman -S shadowsocks-libev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="shadowsocks-server-configuration">Shadowsocks Server Configuration&lt;/h3>
&lt;p>Config file is located at &lt;code>/etc/shadowsocks/myserver.json&lt;/code>. On FreeBSD it is &lt;code>/usr/local/etc/shadowsocks/myserver.json&lt;/code>&lt;/p>
&lt;p>The file name can vary.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server_port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8388&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mypassword&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;chacha20-ietf-poly1305&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fast_open&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;workers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;nameserver&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;8.8.8.8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: For server, &lt;code>&amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;&lt;/code> and &lt;code>&amp;quot;local_port&amp;quot;: 1080&lt;/code> would cause problems so don&amp;rsquo;t them.&lt;/p>
&lt;h3 id="start-the-server-as-a-system-service">Start the Server as A System Service&lt;/h3>
&lt;p>The server can be started in the background but it&amp;rsquo;s not persistent after reboot.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ ss-server -c /etc/shadowsocks/myserver.json &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Use &lt;code>systemd&lt;/code> to make it run automatically.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: The config file name has to be placed after &lt;code>@&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo systemctl &lt;span class="nb">enable&lt;/span> shadowsocks-libev-server@myserver
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo systemctl start shadowsocks-libev-server@myserver
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="client-helper">Client Helper&lt;/h2>
&lt;h3 id="ss-access-key-generation-script--bash-script">SS Access Key Generation Script (Bash Script)&lt;/h3>
&lt;p>This script will prompt you to input parameters that are in the config file to generate a base64 encoded link.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># Usage: this_script.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Method: &amp;#39;&lt;/span> -r ss_method
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Password: &amp;#39;&lt;/span> -r ss_password
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Server IP: &amp;#39;&lt;/span> -r ss_server_ip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">read&lt;/span> -p &lt;span class="s1">&amp;#39;Server Port: &amp;#39;&lt;/span> -r ss_server_port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ss://&amp;#34;&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_method&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_password&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">@&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_server_ip&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ss_server_port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> base64&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ss-access-key-generation-script--javascript">SS Access Key Generation Script (JavaScript)&lt;/h3>
&lt;p>This approch requires Node.js but it can parse config file automatically.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Usage: node this_script.js &amp;lt;config_file&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">argv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;nothing&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">config_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">config_json&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">config_file&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">ss_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ss://&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">btoa&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;method&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;password&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">@&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;server&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">config_json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;server_port&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ss_url&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>SSH Over GPG Agent</title><link>https://peromage.github.io/p/ssh-over-gpg-agent/</link><pubDate>Sun, 13 Mar 2022 00:02:00 +0000</pubDate><guid>https://peromage.github.io/p/ssh-over-gpg-agent/</guid><description>&lt;p>This is a quick note of &lt;code>gpg-agent&lt;/code> setup for SSH.&lt;/p>
&lt;h2 id="quick-setup">Quick Setup&lt;/h2>
&lt;ol>
&lt;li>Import your GPG authentication key.&lt;/li>
&lt;li>Enable SSH support for &lt;code>gpg-agent&lt;/code>.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> enable-ssh-support &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.gnupg/gpg-agent.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Get the authentication keygrip.&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ gpg -k --with-keygrip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Add the authentication key to the keychain (replace &lt;code>KEYGRIP&lt;/code> with the value obtained from the previous step)&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> KEYGRIP &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.gnupg/sshcontrol
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Add the following init code to &lt;code>.bashrc&lt;/code>&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">unset&lt;/span> SSH_AGENT_PID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SSH_AUTH_SOCK&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>gpgconf --list-dirs agent-ssh-socket&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GPG_TTY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>tty&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg-connect-agent updatestartuptty /bye &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>Kill any running &lt;code>ssh-agent&lt;/code> and &lt;code>gpg-agent&lt;/code>, and then open a new Bash session.&lt;/li>
&lt;/ol>
&lt;h2 id="misc">Misc&lt;/h2>
&lt;h3 id="export-ssh-public-keys">Export SSH Public Keys&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ gpg --export-ssh-key &amp;lt;uid/fingerprint&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>