<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Autoloading on undefined behavior</title><link>https://peromage.github.io/tags/autoloading/</link><description>Recent content in Autoloading on undefined behavior</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 06 Jun 2022 00:22:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/tags/autoloading/index.xml" rel="self" type="application/rss+xml"/><item><title>Autoloading in Emacs</title><link>https://peromage.github.io/p/autoloading-in-emacs/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://peromage.github.io/p/autoloading-in-emacs/</guid><description>&lt;p>Autoloading is a neat feature in Emacs. It speeds up Emacs by lazy load the files. But it could be a little confusing if you&amp;rsquo;re switching from Vim.&lt;/p>
&lt;h2 id="myth-not-working-as-expected">Myth - Not Working as Expected&lt;/h2>
&lt;p>If you have used Vim you know in Vim you can put your library files to the load path variable and Vim autoloads them whenever one of the functions/variables is used. Initially I thought this is the same in Emacs but with a little effort to put the magic autoload comments before the function/variable definition. It turned out I was wrong. When I called my functions Emacs could not find them until I explicitly require them. This is obviously not my intention.&lt;/p></description></item></channel></rss>