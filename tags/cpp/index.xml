<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cpp on Fang</title><link>https://peromage.github.io/tags/cpp/</link><description>Recent content in cpp on Fang</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/tags/cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>Initialize std::array at Compile Time</title><link>https://peromage.github.io/blog/initialize-std-array-at-compile-time/</link><pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate><guid>https://peromage.github.io/blog/initialize-std-array-at-compile-time/</guid><description>Background I&amp;rsquo;ve been working on optimization for some C++ code recently. One of the part is to initialize some data at compile time. Consider we have a C style enum definition:
typedef enum Foo { AAA = 0, BBB, CCC } Foo_t; We want to have an array of the enum with undefined initial values 999 because by default initialization the values would be 0&amp;rsquo;s. However, std::array can only be initialized by initializer list, which is said:</description></item></channel></rss>