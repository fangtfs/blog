<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>elisp on (->> truth seek (desire))</title><link>https://peromage.github.io/tags/elisp/</link><description>Recent content in elisp on (->> truth seek (desire))</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Mar 2023 23:17:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/tags/elisp/index.xml" rel="self" type="application/rss+xml"/><item><title>Different Ways to Write a Major Mode</title><link>https://peromage.github.io/p/different-ways-to-write-a-major-mode/</link><pubDate>Thu, 16 Mar 2023 23:17:00 +0000</pubDate><guid>https://peromage.github.io/p/different-ways-to-write-a-major-mode/</guid><description>This post mainly helps myself remember how to quickly write a major mode. My memory is getting worse. So sad. :(
Use define-derived-mode Doc: https://www.gnu.org/software/emacs/manual/html_node/elisp/Derived-Modes.html
This perhaps the most common way to write a major mode.
Most of the times I derive from fundamental-mode, or nil if the parent mode is not needed (a brand new mode).
;; With a parent mode (define-derived-mode foo-mode fundamental-mode &amp;#34;Foo&amp;#34; (do something)) ;; Or nothing (define-derived-mode foo-mode nil &amp;#34;Foo&amp;#34; (do something)) Here is the common pattern that I use.</description></item><item><title>Use lisp-data Files in Emacs</title><link>https://peromage.github.io/p/use-lisp-data-files-in-emacs/</link><pubDate>Mon, 14 Nov 2022 10:57:00 +0000</pubDate><guid>https://peromage.github.io/p/use-lisp-data-files-in-emacs/</guid><description>I found that there were few posts mentioning about using lisp-data files. However, it seems to be used widely in various packages.
Emacs manumal has a very detailed description of how to read and write lisp objects. In this post I&amp;rsquo;ll mainly demonstrate one specific use case.
Read from file The biggest challenge is to parse file content to Lisp lists. After a quick search with describe-function, read function is able to perfectly handle it in this case.</description></item></channel></rss>